{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to AWSIM","text":"<p>AWSIM is the best scene for Autoware.</p> <p>Features</p> <ul> <li>Many predefined components included (Vehicle dynamic models, Sensor models, Environment configuration, ROS2 communication, etc)</li> <li>Support for Ubuntu 22.04 and windows10/11</li> <li>ROS2 native communication (humble)</li> <li>Open sourced</li> <li>Made with Unity</li> </ul>"},{"location":"#try-the-simulation-demo-yourself","title":"Try the simulation demo yourself!","text":"<p>Download AWSIM Demo for Ubuntu</p> <p>To test the AWSIM demo with Autoware please refer to the AWSIM Demo section.</p>"},{"location":"Contact/","title":"Contact","text":"<p>English/\u65e5\u672c\u8a9e OK</p> <p>e-mail : takatoki.makino@tier4.jp twitter : mackierx111</p>"},{"location":"DeveloperGuide/API/","title":"API","text":"<p>(Future generated documentation)</p>"},{"location":"DeveloperGuide/Contributing/GitBranch/","title":"Git Branch","text":"<p>The document presents the rules of branching adopted in the AWSIM development process.</p>"},{"location":"DeveloperGuide/Contributing/GitBranch/#branches","title":"Branches","text":"branch explain main Stable branch. Contains all the latest releases. feature/*** Feature implementation branch created from <code>main</code>. After implementation, it is merged into <code>main</code>. gh-pages Documentation hosted on GitHub pages."},{"location":"DeveloperGuide/Contributing/GitBranch/#branch-flow","title":"Branch flow","text":"<ol> <li>Create <code>feature/***</code> branch from <code>main</code>.</li> <li>Implement in <code>feature/***</code> branch.</li> <li>Create a PR from the <code>feature/***</code> branch to <code>main</code> branch. Merge after review.</li> </ol>"},{"location":"DeveloperGuide/Contributing/HowToContribute/","title":"How to Contribute","text":"<p>Everyone is welcome!</p>"},{"location":"DeveloperGuide/Contributing/HowToContribute/#how-can-i-get-help","title":"How can I get help?","text":"<p>Do not open issues for general support questions as we want to keep GitHub issues for confirmed bug reports.  Instead, open a discussion in the Q&amp;A category. The trouble shooting page at AWSIM and at Autoware will be also helpful.</p>"},{"location":"DeveloperGuide/Contributing/HowToContribute/#issue","title":"Issue","text":"<p>Before you post an issue, please search Issues and Discussions Q&amp;A catecory to check if it is not a known issue.</p> <p>This page is helpful how to create an issue from a repository.</p>"},{"location":"DeveloperGuide/Contributing/HowToContribute/#bug-report","title":"Bug report","text":"<p>If you find a new bug, please create an issue here</p>"},{"location":"DeveloperGuide/Contributing/HowToContribute/#feature-request","title":"Feature request","text":"<p>If you propose a new feature or have an idea, please create an issue here</p>"},{"location":"DeveloperGuide/Contributing/HowToContribute/#task","title":"Task","text":"<p>If you have plan to contribute AWSIM, please create an issue here.</p>"},{"location":"DeveloperGuide/Contributing/HowToContribute/#question","title":"Question","text":"<ul> <li>If you need a general support, please open a discussion in the Q&amp;A category.</li> <li>You can contribute by Answering questions and supporting other contributors</li> </ul>"},{"location":"DeveloperGuide/Contributing/HowToContribute/#pull-requests","title":"Pull requests","text":"<p>If you have an idea to improve the simulation, you can submit a pull request. The following process should be followed:</p> <ol> <li>Create a derived branch (<code>feature/***</code>) from the <code>main</code> branch.</li> <li>Create a pull request to the <code>main</code> branch.</li> </ol> <p>Please keep the following in mind, while developing new features:</p> <ul> <li>Git branching guidelines</li> <li>C# coding convention.</li> </ul>"},{"location":"DeveloperGuide/DocumentationGeneration/","title":"Documentation generation","text":"<p>This document uses Material for MkDocs. </p>"},{"location":"DeveloperGuide/DocumentationGeneration/#local-hosting","title":"Local hosting","text":"<p>1 Install Material for <code>MkDocs</code>. <pre><code>$ pip install mkdocs-material\n</code></pre> 2 Hosting on localhost. <pre><code>$ cd AWSIM\n$ mkdocs serve\nINFO     -  Building documentation...\nINFO     -  Cleaning site directory\nINFO     -  Documentation built in 0.16 seconds\nINFO     -  [03:13:22] Watching paths for changes: 'docs', 'mkdocs.yml'\nINFO     -  [03:13:22] Serving on http://127.0.0.1:8000/\n</code></pre></p> <p>3 Access <code>http://127.0.0.1:8000/</code> with a web browser. </p> <p>For further reference see Material for MkDocs - Getting started.</p>"},{"location":"DeveloperGuide/DocumentationGeneration/#mkdocs-files","title":"MkDocs files","text":"<p>Use the following <code>/docs</code> directory and <code>mkdocs.yml</code> for new documentation files. <pre><code>AWSIM\n\u251c\u2500 docs/                // markdown and image file for each document.\n\u2514\u2500 mkdocs.yml           // mkdocs config.\n</code></pre> Create one directory per document. For example, the directory structure of this \"Documentation\" page might look like this. <pre><code>AWSIM\n\u2514\u2500 docs/                            // Root of all documents\n    \u2514\u2500 DeveloperGuide               // Category\n        \u2514\u2500 Documentation            // Root of each document\n            \u251c\u2500 index.md             // Markdown file\n            \u2514\u2500 image_0.png          // Images used in markdown file\n</code></pre></p>"},{"location":"DeveloperGuide/DocumentationGeneration/#deploy-hosting","title":"Deploy &amp; Hosting","text":"<p>When docs are pushed to the main branch, they are deployed to GitHub Pages using GitHub Actions. See also Material for MkDocs - Publishing your site</p>"},{"location":"DeveloperGuide/TroubleShooting/","title":"Trouble shooting","text":"<p>This document describes the most common errors encountered when working with AWSIm or autoware.</p> Trouble Solution Massive output of Plugins errors <code>git clone</code> the AWSIM repository again error : <code>RuntimeError: error not set, at C:\\ci\\ws\\src\\ros2\\rcl\\rcl\\src\\rcl\\node.c:262</code> Set up environment variables and config around ROS2 correctly. For example: - Environment variables - <code>cyclonedds_config.xml</code> <code>$ ros2 topic list</code> is not displayed - your machine <code>ROS_DOMAIN_ID</code> is different- <code>ROS2</code> is not sourced Using AWSIM on Windows and Autoware on Ubuntu.  <code>$ ros2 topic list</code> is not displayed. Allow the communication in Windows Firewall self-driving stops in the middle of the road. Check if your map data is correct (PointCloud, VectorMap, 3D fbx models) Connecting AWSIM and Autoware results in bad network Make ros local host-only. Include the following in the .bashrc (The password will be requested at terminal startup after OS startup.)  <code>export ROS_LOCALHOST_ONLY=1</code><code>export RMW_IMPLEMENTATION=rmw_cyclonedds_cpp</code><code>if [ ! -e /tmp/cycloneDDS_configured ]; then</code><code>sudo sysctl -w net.core.rmem_max=2147483647</code><code>sudo ip link set lo multicast on</code><code>touch /tmp/cycloneDDS_configured</code><code>fi</code> Lidar (colored pointcloud on RViz ) does not show. Reduce processing load by following command. This can only be applied to Autoware's <code>awsim-stable</code> branch.  <code>cd &lt;path_to_your_autoware_folder&gt;</code><code>wget \"https://drive.google.com/uc?export=download&amp;id=11mkwfg-OaXIp3Z5c3R58Pob3butKwE1Z\" -O patch.sh</code><code>bash patch.sh &amp;&amp; rm patch.sh</code> Error when starting AWSIM binary. <code>segmentation fault (core dumped)</code> Check if yourNvidia drivers or Vulkan API are installed correctly Initial pose does not match automatically. Set initial pose manually.  Unity crashes and check the log for the cause of the error. Editor log file locationWindows : <code>C:\\Users\\username\\AppData\\Local\\Unity\\Editor\\Editor.log</code>Linux : <code>~/.config/unity3d/.Editor.log</code> Player log file location Windows : <code>C:\\Users\\username\\AppData\\LocalLow\\CompanyName\\ProductName\\output_log.txt</code>Linux :<code>~/.config/unity3d/CompanyName/ProductName/Player.log</code>See also : Unity Documentation - Log Files Safe mode dialog appears when starting UnityEditor.  or  error : <code>No usable version of libssl was found</code> 1. download libssl  <code>$ wget http://security.ubuntu.com/ubuntu/pool/main/o/openssl1.0/libssl1.0.0_1.0.2n-1ubuntu5.11_amd64.deb</code>  2. install  <code>sudo dpkg -i libssl1.0.0_1.0.2n-1ubuntu5.11_amd64.deb</code>"},{"location":"DeveloperGuide/Tutorials/AddANewEnvironment/","title":"Add a new Environment","text":"<p>Create a lanelet2</p> <ul> <li>Use VectorMapBuilder and real-world PCD (.pcd) (video - .osm file creation)</li> </ul> <p>Create a prefab</p> <ul> <li>Guidelines for making 3d models (impact on performance, culling\u2026)</li> <li>Add roads, buildings, greenery, signs, road markings\u2026 (screens)</li> <li>Add Traffic Lights<ul> <li>Add Traffic Light Script (bulb emission and material configs - screens)</li> </ul> </li> <li>Add a Directional Light (screen - example, hyperlink to unity)</li> <li>Add a Volume (screen - example,, hyperlink to unity)</li> <li>Add a Environment Script (MGRS)</li> <li>Add NPCPedestrians (guidelines, walker configuration)</li> <li>Add a RandomTraffic (hyperlink)</li> </ul> <p>Create a PCD from Mesh</p> <ul> <li>Reasons for making pcd from mesh instead of using real world pcd.</li> <li>Usage requirements (osm file, 3d model (prefab))</li> <li>Create a scene with 3D model map of the area (gif)</li> <li>Import osm file (gif)</li> <li>Add a simple vehicle<ul> <li>Add a geometry with collider (screen)</li> <li>Add a lidar link (screen)</li> <li>Add a Lidar Sensor Script (screen)</li> <li>Add a RGL Mapping Adapter Script (explanation, leaf size)</li> <li>Add a Point Cloud Visualization Script</li> </ul> </li> <li>Add a Scene Manager (hyperlink)</li> <li>Add a Point Cloud Mapper Script (description, osm container, world origin, vehicle, output, interval)</li> <li>Mapping (description play-&gt;stop-&gt;result, example - video)</li> </ul>"},{"location":"DeveloperGuide/Tutorials/AddANewLiDARModel/","title":"Add a new LiDAR model","text":"<ul> <li>Update LidarModels.cs (description, screen)</li> <li>Update LaserArrayLibrary.cs (description, using LaserArray.Uniform() to generate a array, screens)</li> <li>Update LidarConfigurationLibrary.cs (description, adding the generated array, screen)</li> <li>Create a prefab (screen)<ul> <li>Add a Lidar Sensor Script</li> <li>Add a Rgl Lidar Publisher Script</li> <li>Add a Point Cloud Visualization Script</li> </ul> </li> <li>How to test - video (hyperlink to 5.2)</li> </ul>"},{"location":"DeveloperGuide/Tutorials/AddANewScene/","title":"Add a new Scene","text":"<ul> <li>Add a ClockPublisher (ros2 topic, qos)</li> <li>Add MainCamera<ul> <li>Camera component (screen, hyperlinks, configure fov)</li> <li>Follow Camera Script (target, parameters, example - screen)</li> </ul> </li> <li>Add a Vehicle (exists prefabs, positioning on the scene, gifs)</li> <li>Add a Scene Manager Script (hyperlink)</li> <li>Add a Environment prefab (hyperlink)</li> </ul>"},{"location":"DeveloperGuide/Tutorials/AddANewVehicle/","title":"Add a new Vehicle","text":"<p>(highlight the part required by ego - not needed in npc)</p> <ul> <li>Create a prefab (gif)</li> <li>Add a Rightbody (gif)</li> <li>Add visual elements (Body, Wheels, Sensor Kit) (what is needed, how to divide the model, how to import, gifs)</li> <li>Add a center of mass (how to estimate, screen)</li> <li>Add a reflection probe (sample configuration, screen)</li> <li>Add a vehicle collider (what is needed, sample configuration, screen)</li> <li>Add wheel colliders (how to properly configure, sample screen)</li> <li>Add a base for sensors (URDF) (where to define, screen)</li> <li>Add a Vehicle Keyboard Input Script (input limits)</li> <li>Add a Vehicle Visual Effect (brake, turn signal, reverse lights, how to test - gifs)</li> <li>Add a Vehicle Script (axes and physics settings, input limits, how to test - video)</li> <li>Add links for sensors (how to define - reference to sensors_calibration, difference in right-handed and left-handed coordinate systems, screens)</li> <li>Adding sensors<ul> <li>Add a VehicleStatusSensor (frame_id, Autoware topics, qos, how to test - screens)</li> <li>Add a LiDAR (scene manager - hyperlink to 7.1.1, model selection, frame_id, Autoware topics, qos, visualization, ranges, gaussian noise, how to test - screen)</li> <li>Add a IMU (frame_id, Autoware topics, qos, how to test - screens)</li> <li>Add a GNSS (frame_id, Autoware topics, qos, how to test - screens)</li> <li>Add a Camera (camera preview, fov, how prepare distorsion shader, ros image shader, parameters, frame_id, Autoware topics, qos, how to test - screens - including traffic light recognition)</li> </ul> </li> <li>Add a Vehicle Ros Input Script (disable keyboard input, Autoware topics, qos, how to test - hyperlink)</li> <li>Add a Vehicle to scene (hyperlink)</li> </ul>"},{"location":"DeveloperGuide/Tutorials/AddARandomTrafficToScene/","title":"Add a RandomTraffic to scene","text":"<p>Add a Random Traffic Simulator Script</p> <ul> <li>Seed, Layers configuration (screens, mention of project settings layers - physics)</li> <li>Add NPCVehicles (gifs)</li> <li>Add spawnable lanes (gifs/video)</li> <li>Vehicles configuration (screens)</li> </ul> <p>Add a TrafficIntersection</p> <ul> <li>Make sure that the TrafficLights have added scripts (hyperlink)</li> <li>Add a box collider (description, guidelines, screen)</li> <li>Add a Traffic Intersection Script<ul> <li>Create traffic light groups (guidelines, gifs/videos)</li> <li>Create lighting sequences (pedestrian and vehicle sequences, intervals, how to test, example - videos)</li> </ul> </li> </ul> <p>Load StopLines and Trafficlanes from Lanelet</p> <p>[Parf of Add Random Traffic Environemnt] (improve, gifs)</p> <p>Complete loaded TrafficLanes</p> <ul> <li>Add right of way lanes<ul> <li>Turn left (guidelines, stop line, examples, screens/videos)</li> <li>Turn right (guidelines, stop line, examples, screens/videos)</li> <li>Straight (guidelines, stop line, examples, screens/videos)</li> </ul> </li> <li>Add a stop line</li> </ul> <p>How to test</p> <p>(scene for example?, gifs)</p> <p>Add a StopLine manually</p> <ul> <li>Add Points (guidelines, gif)</li> <li>TrafficLight assignment (guidelines, gif)</li> </ul> <p>Add a TrafficLane manually</p> <ul> <li>Add waypoints (guidelines - case without stop line, gifs)</li> <li>Add a next and prev lanes (gifs)</li> </ul>"},{"location":"DeveloperGuide/Tutorials/AddASceneManagerToScene/","title":"Add a SceneManager to scene","text":"<p>(prefab location, purpose of existence)</p> <ul> <li>Usage requirements (collider, mesh renderer, skinned mesh renderer, Read/Write Enabled)</li> <li>Add a prefab to scene</li> <li>Selection of interaction strategies (Mesh Source) (description of the impact on performance)<ul> <li>Only colliders (gif)</li> <li>Regular Meshes And Colliders Instead Of Skinned (gif)</li> <li>Regular Meshes And Skinned Meshes (gif)</li> </ul> </li> </ul>"},{"location":"Introduction/AWSIM/","title":"AWSIM","text":"<p>(what is AWSIM, why was it created, features, advantages, simple description of the architecture - screen)</p>"},{"location":"Introduction/AWSIM/#what-is-awsim","title":"What is AWSIM","text":"<p>AWSIM is a simulation developed for self-driving software like Autoware.</p>"},{"location":"Introduction/AWSIM/#why-was-awsim-created","title":"Why was AWSIM created","text":""},{"location":"Introduction/AWSIM/#features-and-advantages","title":"Features and advantages","text":"<p>Main features of AWSIM</p> <ul> <li>Support for Ubuntu 22.04 and Windows 10/11</li> <li>ROS 2 communication (humble)</li> <li>Open source</li> <li>Made with Unity</li> </ul>"},{"location":"Introduction/AWSIM/#simple-description-of-the-architecture","title":"Simple description of the architecture","text":""},{"location":"Introduction/AWSIMAutoware/","title":"AWSIM & Autoware","text":"<p>(how the AWSIM-Autoware connection architecture look like - screens, hyperlink to list of used topics)</p>"},{"location":"Introduction/AWSIMAutoware/#awsim-autoware-connection-architecture","title":"AWSIM - Autoware connection architecture","text":"<p>ROS 2 topics</p>"},{"location":"Introduction/AWSIMAutoware/Features/","title":"Features","text":"<ul> <li>Engagement (driving straight, turning - with a view of the intersection shape, gifs)</li> <li>Traffic light recognition<ul> <li>Stopping at a red and yellow lights (gifs)</li> <li>Running a green and yellow lights (gifs)</li> </ul> </li> <li>Interaction with vehicles<ul> <li>Following (with suddenly stop, gifs)</li> <li>Right-of-way at the intersection (turning right, forcing-&gt;stopping, gifs)</li> <li>Cut-in situation (gifs)</li> </ul> </li> <li>Interaction with pedestrians<ul> <li>Right-of-way at a crosswalk (with red light and forcing, gifs)</li> <li>Pedestrian on the road beyond the crosswalk (gifs)</li> </ul> </li> <li>Detecting bad behaviors (Future, gifs)</li> </ul>"},{"location":"Introduction/AWSIMAutoware/Features/#engagement","title":"Engagement","text":"<p>Autoware in combination with AWSIM can participate in common road situations</p> <ul> <li>Drive straight in lane on an intersection </li> <li>Turn on an intersection </li> </ul>"},{"location":"Introduction/AWSIMAutoware/Features/#traffic-light-recognition","title":"Traffic light recognition","text":"<p>AWSIM allows Autoware to recognize traffic lights and act accordingly</p> <ul> <li>Stop at a red light </li> <li>Drive at green light </li> <li>Still drive at a yellow light </li> </ul>"},{"location":"Introduction/AWSIMAutoware/Features/#interaction-with-vehicles","title":"Interaction with vehicles","text":""},{"location":"Introduction/AWSIMAutoware/Features/#interaction-with-pedestrians","title":"Interaction with pedestrians","text":""},{"location":"Introduction/AWSIMAutowareScenarioSimulatorV2/","title":"AWSIM & Autoware & Scenario simulator v2","text":"<p>(how the AWSIM-autoware-ss2 connection architecture look like - screens)</p>"},{"location":"Introduction/AWSIMAutowareScenarioSimulatorV2/Features/","title":"Features","text":"<p>(what are the possibilities of using AWSIM &amp; Autoware with ss2)</p>"},{"location":"Introduction/Autoware/","title":"Autoware","text":"<p>(what is Autoware and why it makes sense to combine it with AWSIM, simple description of the architecture - screen)</p>"},{"location":"Introduction/Autoware/#what-is-autoware","title":"What is Autoware","text":"<p>Autoware is an open source software project for autonomous driving. Autoware is build using ROS 2.</p>"},{"location":"Introduction/Autoware/#why-use-awsim-with-autoware","title":"Why use AWSIM with Autoware","text":"<p>If you are using Autoware it makes sense to use AWSIM as it was developed for just this use case. AWSIM enables effortless communication with Autoware which makes it easy to use.</p>"},{"location":"Introduction/Autoware/#simple-description-of-the-architecture","title":"Simple description of the architecture","text":""},{"location":"License/","title":"License","text":"<p>AWSIM Licenses</p> <p>AWSIM License Applies to tier4/AWSIM repositories and all content contained in the Releases.</p> <ul> <li>AWSIM specific code is distributed under Apache2.0 License. The following extensions are included (<code>*.cs</code> <code>*.compute</code> <code>*.xml</code>)</li> <li>AWSIM specific assets are distributed under CC BY-NC License. The following extensions are included (<code>*.fbx</code> <code>*.pcd</code> <code>*.osm</code> <code>*.png</code> <code>*.anim</code> <code>*.unitypackage</code> <code>*.x86_64</code>)</li> </ul> <pre><code>                             Apache License\n                       Version 2.0, January 2004\n                    http://www.apache.org/licenses/\n</code></pre> <p>TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION</p> <ol> <li> <p>Definitions.</p> <p>\"License\" shall mean the terms and conditions for use, reproduction,   and distribution as defined by Sections 1 through 9 of this document.</p> <p>\"Licensor\" shall mean the copyright owner or entity authorized by   the copyright owner that is granting the License.</p> <p>\"Legal Entity\" shall mean the union of the acting entity and all   other entities that control, are controlled by, or are under common   control with that entity. For the purposes of this definition,   \"control\" means (i) the power, direct or indirect, to cause the   direction or management of such entity, whether by contract or   otherwise, or (ii) ownership of fifty percent (50%) or more of the   outstanding shares, or (iii) beneficial ownership of such entity.</p> <p>\"You\" (or \"Your\") shall mean an individual or Legal Entity   exercising permissions granted by this License.</p> <p>\"Source\" form shall mean the preferred form for making modifications,   including but not limited to software source code, documentation   source, and configuration files.</p> <p>\"Object\" form shall mean any form resulting from mechanical   transformation or translation of a Source form, including but   not limited to compiled object code, generated documentation,   and conversions to other media types.</p> <p>\"Work\" shall mean the work of authorship, whether in Source or   Object form, made available under the License, as indicated by a   copyright notice that is included in or attached to the work   (an example is provided in the Appendix below).</p> <p>\"Derivative Works\" shall mean any work, whether in Source or Object   form, that is based on (or derived from) the Work and for which the   editorial revisions, annotations, elaborations, or other modifications   represent, as a whole, an original work of authorship. For the purposes   of this License, Derivative Works shall not include works that remain   separable from, or merely link (or bind by name) to the interfaces of,   the Work and Derivative Works thereof.</p> <p>\"Contribution\" shall mean any work of authorship, including   the original version of the Work and any modifications or additions   to that Work or Derivative Works thereof, that is intentionally   submitted to Licensor for inclusion in the Work by the copyright owner   or by an individual or Legal Entity authorized to submit on behalf of   the copyright owner. For the purposes of this definition, \"submitted\"   means any form of electronic, verbal, or written communication sent   to the Licensor or its representatives, including but not limited to   communication on electronic mailing lists, source code control systems,   and issue tracking systems that are managed by, or on behalf of, the   Licensor for the purpose of discussing and improving the Work, but   excluding communication that is conspicuously marked or otherwise   designated in writing by the copyright owner as \"Not a Contribution.\"</p> <p>\"Contributor\" shall mean Licensor and any individual or Legal Entity   on behalf of whom a Contribution has been received by Licensor and   subsequently incorporated within the Work.</p> </li> <li> <p>Grant of Copyright License. Subject to the terms and conditions of       this License, each Contributor hereby grants to You a perpetual,       worldwide, non-exclusive, no-charge, royalty-free, irrevocable       copyright license to reproduce, prepare Derivative Works of,       publicly display, publicly perform, sublicense, and distribute the       Work and such Derivative Works in Source or Object form.</p> </li> <li> <p>Grant of Patent License. Subject to the terms and conditions of       this License, each Contributor hereby grants to You a perpetual,       worldwide, non-exclusive, no-charge, royalty-free, irrevocable       (except as stated in this section) patent license to make, have made,       use, offer to sell, sell, import, and otherwise transfer the Work,       where such license applies only to those patent claims licensable       by such Contributor that are necessarily infringed by their       Contribution(s) alone or by combination of their Contribution(s)       with the Work to which such Contribution(s) was submitted. If You       institute patent litigation against any entity (including a       cross-claim or counterclaim in a lawsuit) alleging that the Work       or a Contribution incorporated within the Work constitutes direct       or contributory patent infringement, then any patent licenses       granted to You under this License for that Work shall terminate       as of the date such litigation is filed.</p> </li> <li> <p>Redistribution. You may reproduce and distribute copies of the       Work or Derivative Works thereof in any medium, with or without       modifications, and in Source or Object form, provided that You       meet the following conditions:</p> <p>(a) You must give any other recipients of the Work or       Derivative Works a copy of this License; and</p> <p>(b) You must cause any modified files to carry prominent notices       stating that You changed the files; and</p> <p>(c) You must retain, in the Source form of any Derivative Works       that You distribute, all copyright, patent, trademark, and       attribution notices from the Source form of the Work,       excluding those notices that do not pertain to any part of       the Derivative Works; and</p> <p>(d) If the Work includes a \"NOTICE\" text file as part of its       distribution, then any Derivative Works that You distribute must       include a readable copy of the attribution notices contained       within such NOTICE file, excluding those notices that do not       pertain to any part of the Derivative Works, in at least one       of the following places: within a NOTICE text file distributed       as part of the Derivative Works; within the Source form or       documentation, if provided along with the Derivative Works; or,       within a display generated by the Derivative Works, if and       wherever such third-party notices normally appear. The contents       of the NOTICE file are for informational purposes only and       do not modify the License. You may add Your own attribution       notices within Derivative Works that You distribute, alongside       or as an addendum to the NOTICE text from the Work, provided       that such additional attribution notices cannot be construed       as modifying the License.</p> <p>You may add Your own copyright statement to Your modifications and   may provide additional or different license terms and conditions   for use, reproduction, or distribution of Your modifications, or   for any such Derivative Works as a whole, provided Your use,   reproduction, and distribution of the Work otherwise complies with   the conditions stated in this License.</p> </li> <li> <p>Submission of Contributions. Unless You explicitly state otherwise,       any Contribution intentionally submitted for inclusion in the Work       by You to the Licensor shall be under the terms and conditions of       this License, without any additional terms or conditions.       Notwithstanding the above, nothing herein shall supersede or modify       the terms of any separate license agreement you may have executed       with Licensor regarding such Contributions.</p> </li> <li> <p>Trademarks. This License does not grant permission to use the trade       names, trademarks, service marks, or product names of the Licensor,       except as required for reasonable and customary use in describing the       origin of the Work and reproducing the content of the NOTICE file.</p> </li> <li> <p>Disclaimer of Warranty. Unless required by applicable law or       agreed to in writing, Licensor provides the Work (and each       Contributor provides its Contributions) on an \"AS IS\" BASIS,       WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or       implied, including, without limitation, any warranties or conditions       of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A       PARTICULAR PURPOSE. You are solely responsible for determining the       appropriateness of using or redistributing the Work and assume any       risks associated with Your exercise of permissions under this License.</p> </li> <li> <p>Limitation of Liability. In no event and under no legal theory,       whether in tort (including negligence), contract, or otherwise,       unless required by applicable law (such as deliberate and grossly       negligent acts) or agreed to in writing, shall any Contributor be       liable to You for damages, including any direct, indirect, special,       incidental, or consequential damages of any character arising as a       result of this License or out of the use or inability to use the       Work (including but not limited to damages for loss of goodwill,       work stoppage, computer failure or malfunction, or any and all       other commercial damages or losses), even if such Contributor       has been advised of the possibility of such damages.</p> </li> <li> <p>Accepting Warranty or Additional Liability. While redistributing       the Work or Derivative Works thereof, You may choose to offer,       and charge a fee for, acceptance of support, warranty, indemnity,       or other liability obligations and/or rights consistent with this       License. However, in accepting such obligations, You may act only       on Your own behalf and on Your sole responsibility, not on behalf       of any other Contributor, and only if You agree to indemnify,       defend, and hold each Contributor harmless for any liability       incurred by, or claims asserted against, such Contributor by reason       of your accepting any such warranty or additional liability.</p> </li> </ol> <p>END OF TERMS AND CONDITIONS</p> <p>APPENDIX: How to apply the Apache License to your work.</p> <pre><code>  To apply the Apache License to your work, attach the following\n  boilerplate notice, with the fields enclosed by brackets \"[]\"\n  replaced with your own identifying information. (Don't include\n  the brackets!)  The text should be enclosed in the appropriate\n  comment syntax for the file format. We also recommend that a\n  file or class name and description of purpose be included on the\n  same \"printed page\" as the copyright notice for easier\n  identification within third-party archives.\n</code></pre> <p>Copyright 2022 TIER IV, Inc.</p> <p>Licensed under the Apache License, Version 2.0 (the \"License\");    you may not use this file except in compliance with the License.    You may obtain a copy of the License at</p> <pre><code>   http://www.apache.org/licenses/LICENSE-2.0\n</code></pre> <p>Unless required by applicable law or agreed to in writing, software    distributed under the License is distributed on an \"AS IS\" BASIS,    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.    See the License for the specific language governing permissions and    limitations under the License.</p> <p>Attribution-NonCommercial 4.0 International</p> <p>=======================================================================</p> <p>Creative Commons Corporation (\"Creative Commons\") is not a law firm and does not provide legal services or legal advice. Distribution of Creative Commons public licenses does not create a lawyer-client or other relationship. Creative Commons makes its licenses and related information available on an \"as-is\" basis. Creative Commons gives no warranties regarding its licenses, any material licensed under their terms and conditions, or any related information. Creative Commons disclaims all liability for damages resulting from their use to the fullest extent possible.</p> <p>Using Creative Commons Public Licenses</p> <p>Creative Commons public licenses provide a standard set of terms and conditions that creators and other rights holders may use to share original works of authorship and other material subject to copyright and certain other rights specified in the public license below. The following considerations are for informational purposes only, are not exhaustive, and do not form part of our licenses.</p> <pre><code> Considerations for licensors: Our public licenses are\n intended for use by those authorized to give the public\n permission to use material in ways otherwise restricted by\n copyright and certain other rights. Our licenses are\n irrevocable. Licensors should read and understand the terms\n and conditions of the license they choose before applying it.\n Licensors should also secure all rights necessary before\n applying our licenses so that the public can reuse the\n material as expected. Licensors should clearly mark any\n material not subject to the license. This includes other CC-\n licensed material, or material used under an exception or\n limitation to copyright. More considerations for licensors:\nwiki.creativecommons.org/Considerations_for_licensors\n\n Considerations for the public: By using one of our public\n licenses, a licensor grants the public permission to use the\n licensed material under specified terms and conditions. If\n the licensor's permission is not necessary for any reason--for\n example, because of any applicable exception or limitation to\n copyright--then that use is not regulated by the license. Our\n licenses grant only permissions under copyright and certain\n other rights that a licensor has authority to grant. Use of\n the licensed material may still be restricted for other\n reasons, including because others have copyright or other\n rights in the material. A licensor may make special requests,\n such as asking that all changes be marked or described.\n Although not required by our licenses, you are encouraged to\n respect those requests where reasonable. More considerations\n for the public:\nwiki.creativecommons.org/Considerations_for_licensees\n</code></pre> <p>=======================================================================</p> <p>Creative Commons Attribution-NonCommercial 4.0 International Public License</p> <p>By exercising the Licensed Rights (defined below), You accept and agree to be bound by the terms and conditions of this Creative Commons Attribution-NonCommercial 4.0 International Public License (\"Public License\"). To the extent this Public License may be interpreted as a contract, You are granted the Licensed Rights in consideration of Your acceptance of these terms and conditions, and the Licensor grants You such rights in consideration of benefits the Licensor receives from making the Licensed Material available under these terms and conditions.</p> <p>Section 1 -- Definitions.</p> <p>a. Adapted Material means material subject to Copyright and Similar      Rights that is derived from or based upon the Licensed Material      and in which the Licensed Material is translated, altered,      arranged, transformed, or otherwise modified in a manner requiring      permission under the Copyright and Similar Rights held by the      Licensor. For purposes of this Public License, where the Licensed      Material is a musical work, performance, or sound recording,      Adapted Material is always produced where the Licensed Material is      synched in timed relation with a moving image.</p> <p>b. Adapter's License means the license You apply to Your Copyright      and Similar Rights in Your contributions to Adapted Material in      accordance with the terms and conditions of this Public License.</p> <p>c. Copyright and Similar Rights means copyright and/or similar rights      closely related to copyright including, without limitation,      performance, broadcast, sound recording, and Sui Generis Database      Rights, without regard to how the rights are labeled or      categorized. For purposes of this Public License, the rights      specified in Section 2(b)(1)-(2) are not Copyright and Similar      Rights.   d. Effective Technological Measures means those measures that, in the      absence of proper authority, may not be circumvented under laws      fulfilling obligations under Article 11 of the WIPO Copyright      Treaty adopted on December 20, 1996, and/or similar international      agreements.</p> <p>e. Exceptions and Limitations means fair use, fair dealing, and/or      any other exception or limitation to Copyright and Similar Rights      that applies to Your use of the Licensed Material.</p> <p>f. Licensed Material means the artistic or literary work, database,      or other material to which the Licensor applied this Public      License.</p> <p>g. Licensed Rights means the rights granted to You subject to the      terms and conditions of this Public License, which are limited to      all Copyright and Similar Rights that apply to Your use of the      Licensed Material and that the Licensor has authority to license.</p> <p>h. Licensor means the individual(s) or entity(ies) granting rights      under this Public License.</p> <p>i. NonCommercial means not primarily intended for or directed towards      commercial advantage or monetary compensation. For purposes of      this Public License, the exchange of the Licensed Material for      other material subject to Copyright and Similar Rights by digital      file-sharing or similar means is NonCommercial provided there is      no payment of monetary compensation in connection with the      exchange.</p> <p>j. Share means to provide material to the public by any means or      process that requires permission under the Licensed Rights, such      as reproduction, public display, public performance, distribution,      dissemination, communication, or importation, and to make material      available to the public including in ways that members of the      public may access the material from a place and at a time      individually chosen by them.</p> <p>k. Sui Generis Database Rights means rights other than copyright      resulting from Directive 96/9/EC of the European Parliament and of      the Council of 11 March 1996 on the legal protection of databases,      as amended and/or succeeded, as well as other essentially      equivalent rights anywhere in the world.</p> <p>l. You means the individual or entity exercising the Licensed Rights      under this Public License. Your has a corresponding meaning.</p> <p>Section 2 -- Scope.</p> <p>a. License grant.</p> <pre><code>   1. Subject to the terms and conditions of this Public License,\n      the Licensor hereby grants You a worldwide, royalty-free,\n      non-sublicensable, non-exclusive, irrevocable license to\n      exercise the Licensed Rights in the Licensed Material to:\n\n        a. reproduce and Share the Licensed Material, in whole or\n           in part, for NonCommercial purposes only; and\n\n        b. produce, reproduce, and Share Adapted Material for\n           NonCommercial purposes only.\n\n   2. Exceptions and Limitations. For the avoidance of doubt, where\n      Exceptions and Limitations apply to Your use, this Public\n      License does not apply, and You do not need to comply with\n      its terms and conditions.\n\n   3. Term. The term of this Public License is specified in Section\n      6(a).\n\n   4. Media and formats; technical modifications allowed. The\n      Licensor authorizes You to exercise the Licensed Rights in\n      all media and formats whether now known or hereafter created,\n      and to make technical modifications necessary to do so. The\n      Licensor waives and/or agrees not to assert any right or\n      authority to forbid You from making technical modifications\n      necessary to exercise the Licensed Rights, including\n      technical modifications necessary to circumvent Effective\n      Technological Measures. For purposes of this Public License,\n      simply making modifications authorized by this Section 2(a)\n      (4) never produces Adapted Material.\n\n   5. Downstream recipients.\n\n        a. Offer from the Licensor -- Licensed Material. Every\n           recipient of the Licensed Material automatically\n           receives an offer from the Licensor to exercise the\n           Licensed Rights under the terms and conditions of this\n           Public License.\n\n        b. No downstream restrictions. You may not offer or impose\n           any additional or different terms or conditions on, or\n           apply any Effective Technological Measures to, the\n           Licensed Material if doing so restricts exercise of the\n           Licensed Rights by any recipient of the Licensed\n           Material.\n\n   6. No endorsement. Nothing in this Public License constitutes or\n      may be construed as permission to assert or imply that You\n      are, or that Your use of the Licensed Material is, connected\n      with, or sponsored, endorsed, or granted official status by,\n      the Licensor or others designated to receive attribution as\n      provided in Section 3(a)(1)(A)(i).\n</code></pre> <p>b. Other rights.</p> <pre><code>   1. Moral rights, such as the right of integrity, are not\n      licensed under this Public License, nor are publicity,\n      privacy, and/or other similar personality rights; however, to\n      the extent possible, the Licensor waives and/or agrees not to\n      assert any such rights held by the Licensor to the limited\n      extent necessary to allow You to exercise the Licensed\n      Rights, but not otherwise.\n\n   2. Patent and trademark rights are not licensed under this\n      Public License.\n\n   3. To the extent possible, the Licensor waives any right to\n      collect royalties from You for the exercise of the Licensed\n      Rights, whether directly or through a collecting society\n      under any voluntary or waivable statutory or compulsory\n      licensing scheme. In all other cases the Licensor expressly\n      reserves any right to collect such royalties, including when\n      the Licensed Material is used other than for NonCommercial\n      purposes.\n</code></pre> <p>Section 3 -- License Conditions.</p> <p>Your exercise of the Licensed Rights is expressly made subject to the following conditions.</p> <p>a. Attribution.</p> <pre><code>   1. If You Share the Licensed Material (including in modified\n      form), You must:\n\n        a. retain the following if it is supplied by the Licensor\n           with the Licensed Material:\n\n             i. identification of the creator(s) of the Licensed\n                Material and any others designated to receive\n                attribution, in any reasonable manner requested by\n                the Licensor (including by pseudonym if\n                designated);\n\n            ii. a copyright notice;\n\n           iii. a notice that refers to this Public License;\n\n            iv. a notice that refers to the disclaimer of\n                warranties;\n\n             v. a URI or hyperlink to the Licensed Material to the\n                extent reasonably practicable;\n\n        b. indicate if You modified the Licensed Material and\n           retain an indication of any previous modifications; and\n\n        c. indicate the Licensed Material is licensed under this\n           Public License, and include the text of, or the URI or\n           hyperlink to, this Public License.\n\n   2. You may satisfy the conditions in Section 3(a)(1) in any\n      reasonable manner based on the medium, means, and context in\n      which You Share the Licensed Material. For example, it may be\n      reasonable to satisfy the conditions by providing a URI or\n      hyperlink to a resource that includes the required\n      information.\n\n   3. If requested by the Licensor, You must remove any of the\n      information required by Section 3(a)(1)(A) to the extent\n      reasonably practicable.\n\n   4. If You Share Adapted Material You produce, the Adapter's\n      License You apply must not prevent recipients of the Adapted\n      Material from complying with this Public License.\n</code></pre> <p>Section 4 -- Sui Generis Database Rights.</p> <p>Where the Licensed Rights include Sui Generis Database Rights that apply to Your use of the Licensed Material:</p> <p>a. for the avoidance of doubt, Section 2(a)(1) grants You the right      to extract, reuse, reproduce, and Share all or a substantial      portion of the contents of the database for NonCommercial purposes      only;</p> <p>b. if You include all or a substantial portion of the database      contents in a database in which You have Sui Generis Database      Rights, then the database in which You have Sui Generis Database      Rights (but not its individual contents) is Adapted Material; and</p> <p>c. You must comply with the conditions in Section 3(a) if You Share      all or a substantial portion of the contents of the database.</p> <p>For the avoidance of doubt, this Section 4 supplements and does not replace Your obligations under this Public License where the Licensed Rights include other Copyright and Similar Rights.</p> <p>Section 5 -- Disclaimer of Warranties and Limitation of Liability.</p> <p>a. UNLESS OTHERWISE SEPARATELY UNDERTAKEN BY THE LICENSOR, TO THE      EXTENT POSSIBLE, THE LICENSOR OFFERS THE LICENSED MATERIAL AS-IS      AND AS-AVAILABLE, AND MAKES NO REPRESENTATIONS OR WARRANTIES OF      ANY KIND CONCERNING THE LICENSED MATERIAL, WHETHER EXPRESS,      IMPLIED, STATUTORY, OR OTHER. THIS INCLUDES, WITHOUT LIMITATION,      WARRANTIES OF TITLE, MERCHANTABILITY, FITNESS FOR A PARTICULAR      PURPOSE, NON-INFRINGEMENT, ABSENCE OF LATENT OR OTHER DEFECTS,      ACCURACY, OR THE PRESENCE OR ABSENCE OF ERRORS, WHETHER OR NOT      KNOWN OR DISCOVERABLE. WHERE DISCLAIMERS OF WARRANTIES ARE NOT      ALLOWED IN FULL OR IN PART, THIS DISCLAIMER MAY NOT APPLY TO YOU.</p> <p>b. TO THE EXTENT POSSIBLE, IN NO EVENT WILL THE LICENSOR BE LIABLE      TO YOU ON ANY LEGAL THEORY (INCLUDING, WITHOUT LIMITATION,      NEGLIGENCE) OR OTHERWISE FOR ANY DIRECT, SPECIAL, INDIRECT,      INCIDENTAL, CONSEQUENTIAL, PUNITIVE, EXEMPLARY, OR OTHER LOSSES,      COSTS, EXPENSES, OR DAMAGES ARISING OUT OF THIS PUBLIC LICENSE OR      USE OF THE LICENSED MATERIAL, EVEN IF THE LICENSOR HAS BEEN      ADVISED OF THE POSSIBILITY OF SUCH LOSSES, COSTS, EXPENSES, OR      DAMAGES. WHERE A LIMITATION OF LIABILITY IS NOT ALLOWED IN FULL OR      IN PART, THIS LIMITATION MAY NOT APPLY TO YOU.</p> <p>c. The disclaimer of warranties and limitation of liability provided      above shall be interpreted in a manner that, to the extent      possible, most closely approximates an absolute disclaimer and      waiver of all liability.</p> <p>Section 6 -- Term and Termination.</p> <p>a. This Public License applies for the term of the Copyright and      Similar Rights licensed here. However, if You fail to comply with      this Public License, then Your rights under this Public License      terminate automatically.</p> <p>b. Where Your right to use the Licensed Material has terminated under      Section 6(a), it reinstates:</p> <pre><code>   1. automatically as of the date the violation is cured, provided\n      it is cured within 30 days of Your discovery of the\n      violation; or\n\n   2. upon express reinstatement by the Licensor.\n\n For the avoidance of doubt, this Section 6(b) does not affect any\n right the Licensor may have to seek remedies for Your violations\n of this Public License.\n</code></pre> <p>c. For the avoidance of doubt, the Licensor may also offer the      Licensed Material under separate terms or conditions or stop      distributing the Licensed Material at any time; however, doing so      will not terminate this Public License.</p> <p>d. Sections 1, 5, 6, 7, and 8 survive termination of this Public      License.</p> <p>Section 7 -- Other Terms and Conditions.</p> <p>a. The Licensor shall not be bound by any additional or different      terms or conditions communicated by You unless expressly agreed.</p> <p>b. Any arrangements, understandings, or agreements regarding the      Licensed Material not stated herein are separate from and      independent of the terms and conditions of this Public License.</p> <p>Section 8 -- Interpretation.</p> <p>a. For the avoidance of doubt, this Public License does not, and      shall not be interpreted to, reduce, limit, restrict, or impose      conditions on any use of the Licensed Material that could lawfully      be made without permission under this Public License.</p> <p>b. To the extent possible, if any provision of this Public License is      deemed unenforceable, it shall be automatically reformed to the      minimum extent necessary to make it enforceable. If the provision      cannot be reformed, it shall be severed from this Public License      without affecting the enforceability of the remaining terms and      conditions.</p> <p>c. No term or condition of this Public License will be waived and no      failure to comply consented to unless expressly agreed to by the      Licensor.</p> <p>d. Nothing in this Public License constitutes or may be interpreted      as a limitation upon, or waiver of, any privileges and immunities      that apply to the Licensor or You, including from the legal      processes of any jurisdiction or authority.</p> <p>=======================================================================</p> <p>Creative Commons is not a party to its public licenses. Notwithstanding, Creative Commons may elect to apply one of its public licenses to material it publishes and in those instances will be considered the \u201cLicensor.\u201d The text of the Creative Commons public licenses is dedicated to the public domain under the CC0 Public Domain Dedication. Except for the limited purpose of indicating that material is shared under a Creative Commons public license or as otherwise permitted by the Creative Commons policies published at creativecommons.org/policies, Creative Commons does not authorize the use of the trademark \"Creative Commons\" or any other trademark or logo of Creative Commons without its prior written consent including, without limitation, in connection with any unauthorized modifications to any of its public licenses or any other arrangements, understandings, or agreements concerning use of licensed material. For the avoidance of doubt, this paragraph does not form part of the public licenses.</p> <p>Creative Commons may be contacted at creativecommons.org</p>"},{"location":"UserGuide/BuildFromSource/Prerequisites/","title":"Prerequisites","text":"<p>Prerequisites</p>"},{"location":"UserGuide/BuildFromSource/RunAWSIMScene/","title":"Run AWSIM scene","text":"<ul> <li>Open the default scene (gifs)</li> </ul>"},{"location":"UserGuide/BuildFromSource/RunAWSIMScene/#run-the-demo-in-editor","title":"Run the demo in Editor","text":"<p>The following steps describe how to run the demo in Unity Editor:</p> <ol> <li>Open the <code>AutowareSimulation.unity</code> scene placed under <code>Assets/AWSIM/Scenes/Main</code> directory</li> <li>Run the simulation by clicking <code>Play</code> button placed at the top section of Editor. </li> </ol> <ul> <li>Run with Autoware (gifs)</li> </ul>"},{"location":"UserGuide/BuildFromSource/SetupUnityProject/","title":"Setup Unity Project","text":"<ul> <li>Download and open project [90% current - including warning] (gifs)</li> <li>Download and import map files (gifs)</li> </ul> <p>Info</p> <p>It is advised to checkout the Quick Start Demo tutorial before reading this section. </p> <p>This page is a tutorial for setting up a AWSIM Unity project.</p>"},{"location":"UserGuide/BuildFromSource/SetupUnityProject/#environment-preparation","title":"Environment preparation","text":""},{"location":"UserGuide/BuildFromSource/SetupUnityProject/#system-setup","title":"System setup","text":"Ubuntu 22Windows <ol> <li>Make sure your machine meets the required hardware specifications.<ul> <li>NOTE: PC requirements may vary depending on simulation contents which may change as the simulator develops</li> </ul> </li> <li>Prepare a desktop PC with Ubuntu 22.04 installed.</li> <li>Install Nvidia drivers and Vulkan Graphics API.</li> <li>Install git.</li> </ol> <ol> <li>Make sure your machine meets the required hardware specifications.<ul> <li>NOTE: PC requirements may vary depending on simulation contents which may change as the simulator develops</li> </ul> </li> <li>Prepare a desktop PC with Windows 10 or 11 (64 bit) installed.</li> <li>Install git.</li> </ol>"},{"location":"UserGuide/BuildFromSource/SetupUnityProject/#open-awsim-project","title":"Open AWSIM project","text":"<p>To open the Unity AWSIM project in Unity Editor: 1. Make sure you have the AWSIM repository cloned     <pre><code>git clone git@github.com:tier4/AWSIM.git\n</code></pre></p> <ol> <li> <p>Launch UnityHub.     <pre><code>./UnityHub.AppImage\n</code></pre></p> </li> <li> <p>Open the project in UnityHub</p> <ul> <li> <p>Click the <code>Open</code> button </p> </li> <li> <p>Navigate the directory where the AWSIM repository was cloned to </p> </li> <li> <p>The project should be added to <code>Projects</code> tab in Unity Hub. To launch the project in Unity Editor simply click the <code>AWSIM</code> item </p> </li> <li> <p>The project is now ready to use </p> </li> </ul> </li> </ol> <p>Warning</p> <p>If you get the safe mode dialog when starting UnityEditor, you may need to install openssl.</p> <ol> <li>download libssl <code>$ wget http://security.ubuntu.com/ubuntu/pool/main/o/openssl1.0/libssl1.0.0_1.0.2n-1ubuntu5.11_amd64.deb</code></li> <li>install <code>sudo dpkg -i libssl1.0.0_1.0.2n-1ubuntu5.11_amd64.deb</code></li> </ol>"},{"location":"UserGuide/BuildFromSource/SetupUnityProject/#import-external-packages","title":"Import external packages","text":"<p>To properly run and use AWSIM project in Unity it is required to download map package which is not included in the repository.</p> <ol> <li> <p>Download and import <code>Japan_Tokyo_Nishishinjuku.unitypackage</code></p> <p>Download Map files (unitypackage)</p> </li> <li> <p>In Unity Editor, from the menu bar at the top, select <code>Assets -&gt; Import Package -&gt; Custom Package...</code> and navigate the <code>Japan_Tokyo_Nishishinjuku.unitypackage</code> file.  </p> </li> <li><code>Nishishinjuku</code> package has been successfully imported under <code>Assets/AWSIM/Externals/</code>directory. </li> </ol> <p>Info</p> <p>The Externals directory is added to the <code>.gitignore</code> because the map has a large file size and should not be directly uploaded to the repository.</p>"},{"location":"UserGuide/BuildFromSource/UnityInstallation/","title":"Unity installation","text":"<ul> <li>UnityHub installation (gifs)</li> </ul> <p>To install UnityHub please follow these instructions.</p> <ul> <li>Unity 2021.1.7f1 installation [70% current] (gifs)</li> </ul>"},{"location":"UserGuide/BuildFromSource/UnityInstallation/#unity-installation","title":"Unity installation","text":"<p>Info</p> <p>AWSIM's Unity version is currently 2021.1.7f1</p> <p>Follow the steps below to install Unity on your machine:</p> <ol> <li>Install UnityHub to manage Unity projects. Please go to Unity download page and download latest <code>UnityHub.AppImage</code>. </li> <li> <p>Install Unity 2021.1.7f1 via UnityHub.</p> <ul> <li>Open new terminal, navigate to directory where <code>UnityHub.AppImage</code> is download and execute the following command: <pre><code>./UnityHub.AppImage\n</code></pre></li> <li>To install Unity Editor please proceed as shown on the images below  </li> <li> <p>At this point, your Unity installation process should have started.</p> Ubuntu 22 <ul> <li>NOTE: If the installation process has not started after clicking the green button (image above), please copy the hyperlink (by rightclicking the button and selecting <code>Copy link address</code>) and add it as a argument for Unity Hub app. An example command: <pre><code>./UnityHub.AppImage unityhub://2021.1.7f1/d91830b65d9b\n</code></pre></li> </ul> </li> <li> <p>After successful installation the version will be available under the <code>Installs</code> tab in Unity Hub. </p> </li> </ul> </li> </ol>"},{"location":"UserGuide/Components/Environment/","title":"Environment","text":"<p>(prefab location, description of what it is, hyperlinks to tutorials)</p> <ul> <li>Environment files (lanelet, pointcloud, fbx)</li> <li>Scene<ul> <li>Layers (what they are and where they are used - collisions, screens)</li> <li>Environment Script (MGRS, screen - example of transform AWSIM world -&gt; MGRS)</li> <li>Models SJK (roads, buildings, greenery, signs, road markings\u2026 - gifs/sceens*: provide some examples, mention the impact on self-localization)</li> <li>Traffic Lights (mention the script and traffic light recognition screen)</li> <li>Scene Manager Script (hyperlink)</li> </ul> </li> </ul>"},{"location":"UserGuide/Components/NPCs/","title":"NPCs","text":"<p>Pedestrian</p> <ul> <li>[70% Current NPC Pedestrian]</li> <li>NPC Pedestrian Script (ground-following, output, screens)</li> <li>Simple Pedestrian Walker Controller Script (duration, speed, examples - gifs)</li> <li>Collider (screen)</li> </ul>"},{"location":"UserGuide/Components/NPCs/#npc-pedestrian","title":"NPC Pedestrian","text":"<p>The <code>NPC Pedestrian</code> is a non-playable humanoid object and used for simulation traffic flows. </p> <p></p> <p>Prefab files are placed under the follow paths.</p> Prefab Path <code>humanElegant.prefab</code> <code>AWSIM\\Assets\\AWSIM\\Prefabs\\NPCs\\Pedestrians</code> <code>humanElegantTest.prefab</code> <code>AWSIM\\Assets\\AWSIM\\Scenes\\Samples\\NPCPedestrianSample</code> <p>Supported features:</p> <ul> <li>Move inverse kinematically based on <code>Vector3 position</code>.</li> <li>Rotate inverse kinematically based on <code>Vector3 rotation</code>.</li> </ul>"},{"location":"UserGuide/Components/NPCs/#sample-scene","title":"Sample scene","text":"<p>The sample scene that simulates the behavior of NPC Pedestrian is placed under <code>AWSIM\\Assets\\AWSIM\\Scenes\\Samples</code> directory.</p>"},{"location":"UserGuide/Components/NPCs/#npc-pedestrian-control-scripts","title":"NPC Pedestrian control scripts","text":"<p><code>NPCPedestrian.cs</code> script that controls the pedestrian's behavior are placed under <code>AWSIM\\Assets\\AWSIM\\Scripts\\NPCs\\Pedestrians</code> directory.</p>"},{"location":"UserGuide/Components/NPCs/#npc-pedestrian-api","title":"NPC Pedestrian API","text":"<p>The following section describes the API of <code>NPCPedestrian.cs</code> script.</p> API type feature SetPosition Vector3 Move the NPC pedestrian so that the reference point is at the specified coordinates. SetRotation Vector3 Rotate the NPC pedestrian so that the orientation of the reference point becomes the specified one. <p>Vehicles</p> <ul> <li>[70% Current NPC Vehicle]</li> <li>NPC Vehicle Script (axle settings, bounds - hyperlink to random traffic, turn signal, brake light , screens)</li> <li>Colliders (significance of colliders, screens)</li> </ul>"},{"location":"UserGuide/Components/NPCs/#npc-vehicle","title":"NPC Vehicle","text":"<p>The <code>NPC Vehicle</code> is a non-playable vehicle object and used for simulation traffic flows. </p> <p></p> <p>The following prefab files are placed under <code>AWSIM\\Assets\\AWSIM\\Prefabs\\NPCs\\Vehicles</code> directory.</p> <p> </p> <p>Supported features:</p> <ul> <li>Move inverse kinematically based on <code>Vector3 position</code>.</li> <li>Rotate inverse kinematically based on <code>Vector3 rotation</code>.</li> </ul>"},{"location":"UserGuide/Components/NPCs/#sample-scene_1","title":"Sample scene","text":"<p>The sample scene that simulates the behavior of NPC Vehicle is placed under <code>AWSIM\\Assets\\AWSIM\\Scenes\\Samples</code> directory.</p>"},{"location":"UserGuide/Components/NPCs/#npc-vehicle-control-scripts","title":"NPC Vehicle control scripts","text":"<p><code>NPCVehicle.cs</code> script that controls the vehicle's behavior are placed under <code>AWSIM\\Assets\\AWSIM\\Scripts\\NPCs\\Vehicles</code> directory.</p>"},{"location":"UserGuide/Components/NPCs/#npc-vehicle-api","title":"NPC Vehicle API","text":"<p>The following section describes the API of <code>NPCVehicle.cs</code> script.</p> API type feature SetPosition Vector3 Move the NPC Vehicle so that its x, z coodinates are same as the specified coordinates. SetRotation Vector3 Rotate the NPC Vehicle so that its yaw becomes equal to the specified one."},{"location":"UserGuide/Components/RandomTrafficSimulator/","title":"Random Traffic Simulator","text":"<p>(description of what it is and how spawned NPCs behave in the environment)</p> <ul> <li>Architecture description [30% current] (graph)</li> <li>Seed, Spawnable Lanes, Max Vehicle Count, Spawning process (description, gif: example of spawning on a specific line)</li> <li>Vehicle Prefabs (screens - examples of vehicles and the impact of boundaries)</li> <li>Vehicle and Ground Layer masks (impact on spawning and behavior)</li> <li>Vehicle Config (an explanation of each and a reference to SpeedMode)</li> <li>Simulator steps (cognition, decision, control -&gt; SpeedMode and Yielding states, graph)</li> <li>Yielding process (stop lines, gifs)</li> <li>Visualization description (screens: yielding, SpeedMode)</li> </ul> <p>TrafficIntersection</p> <p>(description of what it is and where it occurs in the environment, screen)</p> <ul> <li>Traffic Lights (description, bulbs, dependence of the location on the lanelet, impact on the recognition of traffic lights in Autoware, screens)</li> <li>Traffic Intersection Script<ul> <li>Collider Mask (probably out of date)</li> <li>Traffic Light Groups (what they are and the result of adding traffic lights to them)</li> <li>Lighting Sequences (description, how it works - gifs)</li> </ul> </li> </ul> <p>StopLine</p> <p>(description of what it is and where it occurs in the environment screen, impact on Random Traffic)</p> <ul> <li>Stop Line Script<ul> <li>Points</li> <li>Stop sign (why this association occurs)</li> <li>Traffic light (why this association occurs)</li> </ul> </li> </ul> <p>TrafficLane</p> <p>(description of what it is and where it occurs in the environment screen, impact on Random Traffic)</p> <ul> <li>Traffic Lane Script<ul> <li>Waypoints (screen)</li> <li>Turn Direction (screens)</li> <li>Next and Prev Lanes (screens)</li> <li>Right of Way Lanes (gifs: a few examples with explanations regarding to Random Traffic)</li> <li>Stop Line (screen)</li> <li>Speed Limit</li> </ul> </li> </ul> <p>The <code>RandomTrafficSimulator</code> simulates city traffic with respect to all traffic rules. The system allows for random selection of car models and the paths they follow. It also allows adding static vehicles in the simulation.</p> <p></p>"},{"location":"UserGuide/Components/RandomTrafficSimulator/#getting-started","title":"Getting Started","text":""},{"location":"UserGuide/Components/RandomTrafficSimulator/#overview","title":"Overview","text":"<p>The random traffic system consists of the following components:</p> <ul> <li><code>RandomTrafficSimulator</code>:  manages lifecycle of NPCs and simulates NPC behaviours.</li> <li><code>TrafficLane</code>, <code>TrafficIntersection</code> and <code>StopLine</code>: represent traffic entities</li> <li><code>NPCVehicle</code>: vehicle models (NPCs) controlled by <code>RandomTrafficSimulator</code></li> </ul> <p></p>"},{"location":"UserGuide/Components/RandomTrafficSimulator/#components-settings","title":"Components Settings","text":"<p>The following section describes Unity Editor components settings.</p>"},{"location":"UserGuide/Components/RandomTrafficSimulator/#random-traffic-simulator","title":"Random Traffic Simulator","text":"Parameter Description General Settings Seed Seed value for random generator Ego Vehicle Transform of ego vehicle Vehicle Layer Mask LayerMask that masks only vehicle(NPC and ego) colliders Ground Layer Mask LayerMask that masks only ground colliders of the map Culling Distance Distance at which NPCs are culled relative to EgoVehicle Culling Hz Culling operation cycle NPC Vehicle Settings Max Vehicle Count Maximum number of NPC vehicles to be spawned in simulation NPC Prefabs Prefabs representing controlled vehicles. They must have <code>NPCVehicle</code> component attached. Spawnable Lanes <code>TrafficLane</code> components where NPC vehicles can be spawned during traffic simulation Vehicle Config Parameters for NPC vehicle control<code>Sudden Deceleration</code> is a deceleration related to emergency braking Debug Show Gizmos Enable the checkbox to show editor gizmos that visualize behaviours of NPCs"},{"location":"UserGuide/Components/RandomTrafficSimulator/#gizmos","title":"Gizmos","text":"<p>Gizmos are useful for checking current behavior of NPCs and its causes. Gizmos have a high computational load so please disable them if the simulation is laggy. </p>"},{"location":"UserGuide/Components/Sensors/","title":"Sensors","text":"<p>VehicleStatusSensor</p> <p>(prefab location, purpose of existence, link, screen)</p> <ul> <li>Vehicle Report Ros Publisher Script (inputs, outputs, topics, frame_id, qos)</li> </ul> <p>RobotecGPULidars [70% current]</p> <p>(prefab location, purpose of existence, RGL repository - hyperlink)</p> <ul> <li>Note: to use RobotecGPULidar, the scene must have Scene Manager Script (hyperlink)</li> <li>Lidar Sensor Script<ul> <li>Available models (prefabs location, description of differences)</li> <li>Parameters (min/max h angle, max range, horizontal steps)</li> <li>Noise (type and params)</li> <li>Laser array configuration</li> <li>Output (Pcl24 vs Pcl48)</li> </ul> </li> <li>Rgl Lidar Ros Publisher Script (topics, frame_id, qos)</li> <li>Point Cloud Visualization Script (points, colors, limits)</li> </ul>"},{"location":"UserGuide/Components/Sensors/#lidar-sensor","title":"Lidar Sensor","text":"<p>AWSIM uses Robotec GPU Lidar, which is a cross-platform (Windows and Linux), RTX-accelerated, CUDA/C++ library developed by Robotec.AI. For more information about RGL library, visit its repository.</p> <p>AWSIM is integrated with RGL out-of-the-box - using RGLUnityPlugin Asset.</p>"},{"location":"UserGuide/Components/Sensors/#ros2-configuration","title":"ROS2 configuration","text":"<p>The following sections describe RGL configuration in AWSIM.</p>"},{"location":"UserGuide/Components/Sensors/#published-topics","title":"Published Topics","text":"<p>The table below shows topics published by <code>RglLidarPublisher</code> script.</p> topic msg frame_id hz QoS <code>/lidar/pointcloud</code> <code>sensor_msgs/PointCloud2</code> <code>world</code> <code>10</code> <code>Reliable</code>, <code>Volatile</code>, <code>Keep last/1</code> <code>/lidar/pointcloud_ex</code> <code>sensor_msgs/PointCloud2</code> <code>world</code> <code>10</code> <code>Reliable</code>, <code>Volatile</code>, <code>Keep last/1</code>"},{"location":"UserGuide/Components/Sensors/#output-data","title":"Output Data","text":"<p>The following table describes <code>LidarSensor.OutputData</code> struct used in Unity:</p> field type feature hitCount int Number of rays that hit any object hits Vector3 [ ] Vertices for visualization in Unity's coordinate system rosPCL24 byte [ ] Vertices for publishing Autoware format pointcloud in ROS coordinate system rosPCL48 byte [ ] Vertices for publishing extended Autoware format pointcloud in ROS coordinate system"},{"location":"UserGuide/Components/Sensors/#minimal-scene-example","title":"Minimal scene example","text":"<p>The scene <code>Assets/AWSIM/Scenes/Samples/LidarSceneDevelop.unity</code> can be used as a complete, minimalistic example of how to setup RGL. It contains <code>RGLSceneManager</code> component, four lidars, and an environment composed of floor and walls.</p> <p></p>"},{"location":"UserGuide/Components/Sensors/#rglscenemanager","title":"RGLSceneManager","text":"<p>Each scene needs <code>RGLSceneManager</code> component to synchronize models between Unity and RGL. On every frame, it detects changes in the Unity's scene  and propagates the changes to native RGL code. Three different strategies to interact with in-simulation 3D models are implemented. <code>RGLSceneManager</code> uses executes one of the following policies to obtain raycast hit:</p> <ul> <li><code>Only Colliders</code> - active colliders only,</li> <li><code>Regular Meshes And Colliders Instead Of Skinned</code> - mesh for non-skinned MeshRenderers or set of colliders (if provided) attached to the rootBone and below for SkinnedMeshRenderers,</li> <li><code>RegularMeshesAndSkinnedMeshes</code> - mesh for both MeshRenderer and SkinnedMeshRenderer.</li> </ul> <p>Mesh source can be changed in the Scene Manager (Script) properties:</p> <p></p> <p>Note: RGLSceneManager performance depends on mesh source option selected.</p>"},{"location":"UserGuide/Components/Sensors/#setup-instruction","title":"Setup instruction","text":"<p>To configure RGL for new scenes, please:</p> <ol> <li>Create an empty object (name it RGLSceneManager).</li> <li>Attach script <code>SceneManager.cs</code> to the RGLSceneManager object.</li> </ol>"},{"location":"UserGuide/Components/Sensors/#lidar-models","title":"Lidar models","text":"<p>Lidar prefabs typically consist of three scripts:</p> <ul> <li><code>LidarSensor</code> - provides lidar configuration and performs native RGL raytrace calls</li> <li><code>PointCloudVisualization</code> - visualizes point cloud collected by sensor</li> <li><code>RglLidarPublisher</code> - converts the data output from LidarSensor to ROS2 msg and publishes it</li> </ul> <p>To use one of the prepared prefab lidars, drag the prefab file and drop it into a scene:</p> <p></p> <p>A lidar GameObject should be instantiated automatically:</p> <p></p> <p>Next, you can modify scripts parameters in Unity Inspector:</p> <p>In <code>LidarSensor</code> script, the following configuration can be changed:</p> <ul> <li><code>Automatic Capture Hz</code> - the rate of sensor processing</li> <li><code>Model Preset</code> - allows selecting one of the built-in LiDAR models</li> <li><code>Apply Gaussian Noise</code> - enable/disable gaussian noise</li> <li><code>Configuration</code> - advanced lidar configuration (in most cases no need to change)<ul> <li><code>Laser Array</code> - geometry description of lidar array</li> <li><code>Horizontal Steps</code> - the number of laser array firings between <code>Min H Angle</code> and <code>Max H Angle</code></li> <li><code>Min H Angle</code> - minimum horizontal angle (left)</li> <li><code>Max H Angle</code> - maximum horizontal angle (right)</li> <li><code>Max Range</code> - maximum range of the sensor</li> <li><code>Noise Params</code> - lidar noise paramteres</li> </ul> </li> </ul> <p></p> <p>In the script <code>Point Cloud Visualization</code> the material of points can be changed. If material is <code>None</code> then <code>PointCloudMaterial</code> from <code>Assets/RGLUnityPlugin/Resources</code> will be automatically loaded. You can disable visualization by deactivating the component.</p> <p></p> <p><code>Point Cloud Visualization</code> preview:</p> <p></p> <p>In the last script - <code>RglLidarPublisher</code> - ROS properties such as topics names, frame IDs, publish activation or QoS settings can be modified:</p> <p></p>"},{"location":"UserGuide/Components/Sensors/#adding-new-lidar-models","title":"Adding new lidar models","text":"<p>To add a new lidar model, perform the following steps:</p> <ol> <li>Add its name to the <code>LidarModels.cs</code></li> <li>If the Lidar has a non-uniform laser array construction (e.g. different linear/angular spacing between lasers), add an entry to the <code>LaserArrayLibrary</code>.</li> <li>Add an entry to <code>LidarConfigurationLibrary</code>. Use the provided laser array or generate a uniform one using static method <code>LaserArray.Uniform()</code>.</li> <li>Done. New lidar preset should be available via Unity Inspector.</li> </ol>"},{"location":"UserGuide/Components/Sensors/#creating-lidar-gameobject","title":"Creating Lidar GameObject","text":"<p>To create GameObject (or prefab) containing lidar sensor, please perform the following steps:</p> <ol> <li>Create an empty object</li> <li>Attach script <code>LidarSensor.cs</code>.</li> <li><code>PointCloudVisualization.cs</code> will be added automatically, however, you can disable it.</li> <li>Now you can add a callback from another script to receive a notification when data is ready:    <pre><code>lidarSensor = GetComponent&lt;LidarSensor&gt;();\nlidarSensor.OnOutputData += HandleLidarDataMethod;\n</code></pre></li> <li>For publishing point cloud via ROS2 attach script <code>RglLidarPublisher.cs</code></li> </ol>"},{"location":"UserGuide/Components/Sensors/#prefabs","title":"Prefabs","text":"<p>The list of available prefabs can be found below.</p> LiDAR Path HESAI Pandar40P <code>Assets/AWSIM/Prefabs/Sensors/RobotecGPULidars/HesaiPandar40P.prefab</code> HESAI PandarQT64 <code>Assets/AWSIM/Prefabs/Sensors/RobotecGPULidars/HesaiPandarQT64.prefab</code> Ouster OS1-64 <code>Assets/AWSIM/Prefabs/Sensors/RobotecGPULidars/OusterOS1-64.prefab</code> Velodyne VLP-16 <code>Assets/AWSIM/Prefabs/Sensors/RobotecGPULidars/VelodyneVLP16.prefab</code> Velodyne VLC-32C <code>Assets/AWSIM/Prefabs/Sensors/RobotecGPULidars/VelodyneVLP32C.prefab</code> Velodyne VLS-128-AP <code>Assets/AWSIM/Prefabs/Sensors/RobotecGPULidars/VelodyneVLS128.prefab</code>"},{"location":"UserGuide/Components/Sensors/#usage-requirements","title":"Usage requirements","text":"<p>Objects, to be detectable by Robotec GPU lidar, must fulfill the following requirements:</p> <ol> <li>Contain one of the components: <code>Collider</code>, <code>Mesh Renderer</code>, or <code>Skinned Mesh Renderer</code>. It depends on RGLSceneManager mesh source parameter.</li> <li>Be readable from CPU-accessible memory. It can be achieved using the \u201cRead/Write Enabled\u201d checkbox in mesh settings. Note: Primitive Objects are readable by default.</li> </ol> <p></p>"},{"location":"UserGuide/Components/Sensors/#rgl-unity-side-scripts","title":"RGL Unity side scripts","text":"<p>The following table describes the most essential lidar simulation scripts:</p> script feature path SceneManager.cs Synchronize the scene between Unity and RGL. <code>Assets/RGLUnityPlugin/Scripts/SceneManager.cs</code> LidarSensor.cs Lidar Sensor. Provide lidar configuration and collect point cloud. <code>Assets/RGLUnityPlugin/Scripts/LidarSensor.cs</code> PointCloudVisualization.cs Visualize point cloud collected by lidar. <code>Assets/RGLUnityPlugin/Scripts/PointCloudVisualization.cs</code> RglLidarPublisher.cs Convert the data output from LidarSensor to ROS2 msg and publish. <code>Assets/AWSIM/Scripts/Sensors/LiDAR/RglLidarPublisher.cs</code> <p>IMUSensor [50% current]</p> <p>(prefab location, purpose of existence, link, screen)</p> <ul> <li>Imu Sensor Script (gravity, output)</li> <li>Imu Ros Publisher Script (topics, frame_id, qos)</li> </ul>"},{"location":"UserGuide/Components/Sensors/#imu-sensor","title":"IMU Sensor","text":"<p>The document describes inertial measurement unit sensor simulation component.</p>"},{"location":"UserGuide/Components/Sensors/#prefabs_1","title":"Prefabs","text":"<p>Path : <code>Assets\\AWSIM\\Prefabs\\Sensors\\IMUSensor.prefab</code></p>"},{"location":"UserGuide/Components/Sensors/#scripts","title":"Scripts","text":"<p>All the most important scripts can be found under the <code>Assets\\AWSIM\\Scripts\\Sensors\\Imu\\*</code></p> <p>The table below describes features contained in each provided script:</p> script feature ImuSensor.cs Core Inertial Measurement Unit Sensor.Measures the Acceleration(m/s^2) and AngularVelocity(rad/s) based on the Transform of the GameObject to which this component is attached to. ImuRos2Publisher.cs Converts the data output from ImuSensor-specific struct to ROS2 message and publishes it."},{"location":"UserGuide/Components/Sensors/#output-data_1","title":"Output Data","text":"<p>The following table describes <code>ImuSensor.OutputData</code> properties:</p> field type feature LinearAcceleration Vector3 Measured acceleration (m/s^2) AungularVelocity Vector3 Measured angular velocity (rad/s)"},{"location":"UserGuide/Components/Sensors/#published-topics_1","title":"Published Topics","text":"<p>The data output is published to the following topics:</p> topic msg frame_id hz QoS <code>/sensing/imu/tamagawa/imu_raw</code> <code>sensor_msgs/Imu</code> <code>tamagawa/imu_link</code> <code>30</code> <code>Reliable</code>, <code>Volatile</code>, <code>Keep last/1000</code> <p>GnssSensor [50% current]</p> <p>(prefab location, purpose of existence, link, screen)</p> <ul> <li>Gnss Sensor Script (MGRS, output)</li> <li>Gnss Ros Publisher Script (topics, frame_id, qos)</li> </ul>"},{"location":"UserGuide/Components/Sensors/#gnss-sensor","title":"GNSS Sensor","text":"<p>GNSS senor is a component which simulates the position of vehicle computed by the Global Navigation Satellite System. The GNSS sensor outputs the position in the MGRS coordinate system.</p>"},{"location":"UserGuide/Components/Sensors/#prefabs_2","title":"Prefabs","text":"<p>The component prefab can be found under the following path: <code>Assets\\AWSIM\\Prefabs\\Sensors\\GnssSensor.prefab</code></p>"},{"location":"UserGuide/Components/Sensors/#scripts_1","title":"Scripts","text":"<p>All the most important scripts can be found under the <code>`Assets\\AWSIM\\Prefabs\\Sensors\\Gnss\\*</code> path.</p> <p>The table below describes features contained in each provided script:</p> script feature GnssSensor.cs Core GNSS sensor. Publishes pose and poseWithCovarianceStamped in MGRS coordinate system. Requires MgrsReference of the Environment for the output data conversion. GnssRos2Publisher.cs Converts the data output from GnssSensor to ROS2 message and publishes it."},{"location":"UserGuide/Components/Sensors/#output-data_2","title":"Output Data","text":"<p>The following table describes <code>GnssSensor.OutputData</code> properties:</p> field type feature MgrsPosition Vector3 Position in the MGRS coordinate system."},{"location":"UserGuide/Components/Sensors/#published-topics_2","title":"Published Topics","text":"<p>The data output is published to the following topics:</p> topic msg frame_id hz QoS <code>/sensing/gnss/pose</code> <code>geometry_msgs/Pose</code> <code>gnss_link</code> <code>1</code> <code>Reliable</code>, <code>Volatile</code>, <code>Keep last/1</code> <code>/sensing/gnss/pose_with_covariance</code> <code>geometry_msgs/PoseWithCovarianceStamped</code> <code>gnss_link</code> <code>1</code> <code>Reliable</code>, <code>Volatile</code>, <code>Keep last/1</code> <p>CameraSensor [10% current]</p> <p>(prefab location, purpose of existence, link, screen)</p> <ul> <li>Camera component (https://docs.unity3d.com/Manual/class-Camera.html)</li> <li>Camera Sensor Script (parameters, output, gui - screen)<ul> <li>Distortion shader (what is it and where is it located)</li> <li>ROS image shader (what is it and where is it located)</li> </ul> </li> <li>Camera Ros Publisher Script (topics, frame_id, qos)</li> <li>Impact on the traffic lights recognition in autoware</li> </ul>"},{"location":"UserGuide/Components/Sensors/#camera-sensor","title":"Camera Sensor","text":"<p>The following document describes Unity component used for camera simulation. The <code>CameraSensor</code> component is used for Autoware traffic light recognition.</p>"},{"location":"UserGuide/Components/Sensors/#prefabs_3","title":"Prefabs","text":"<p>The component prefab can be found under the following path: <code>Assets\\AWSIM\\Prefabs\\Sensors\\CameraSensor.prefab</code></p>"},{"location":"UserGuide/Components/Sensors/#scripts_2","title":"Scripts","text":"<p>All the most important scripts can be found under the <code>Assets\\AWSIM\\Prefabs\\Sensors\\CameraSensor\\*</code> path.</p> <p>The table below describes features contained in each provided script:</p> script feature CameraSensor.cs Core camera sensor component. It is responsible for applying OpenCV distortion and encoding to bgr8 format. Uses <code>ComputeShader</code>. CameraRos2Publisher.cs Converts the data output from CameraSensor to ROS2 message and publishes it."},{"location":"UserGuide/Components/Sensors/#output-data_3","title":"Output Data","text":"<p>The sensor computation output format is presented below:</p> field type feature ImageDataBuffer byte[ ] Buffer with image data. CameraParameters CameraParameters Set of the camera parameters."},{"location":"UserGuide/Components/Sensors/#published-topics_3","title":"Published Topics","text":"<p>The data output is published to the following topics:</p> topic msg frame_id hz QoS <code>/sensing/camera/traffic_light/camera_info</code> <code>sensor_msgs/CameraInfo</code> <code>traffic_light_left_camera/camera_link</code> <code>10</code> <code>Best effort</code>, <code>Volatile</code>, <code>Keep last/1</code> <code>/sensing/camera/traffic_light/image_raw</code> <code>sensor_msgs/Image</code> <code>traffic_light_left_camera/camera_link</code> <code>10</code> <code>Best effort</code>, <code>Volatile</code>, <code>Keep last/1</code>"},{"location":"UserGuide/Components/Vehicle/","title":"Vehicle","text":"<p>(prefab location, transform links, screens)</p> <p>Dynamics Concept</p> <p>(description, required parameters, gifs - dynamic presentation)</p> <p>Scripts</p> <ul> <li>Vehicle (physis settings, inputs and outputs - hyperlink to ros topic list)</li> <li>Vehicle Ros Input (limits, impact of the ros inputs on the vehicle behavior - reference to Autoware)</li> <li>Vehicle KeyBoard Input (control description)</li> <li>Vehicle Visual Effect (gifs: brake, turn signal, reverse lights)</li> </ul> <p>Sensors</p> <ul> <li>VehicleStatusSensor (a short description and a hyperlink to a detailed description)</li> <li>RobotecGPULidars (eg. VelodyneVLP16 on top, a short description and a hyperlink to a detailed description)</li> <li>IMUSensor (a short description and a hyperlink to a detailed description)</li> <li>GnssSensor (a short description and a hyperlink to a detailed description)</li> <li>CameraSensor (a short description and a hyperlink to a detailed description)</li> <li>Sensor links definition - Autoware dependency (URDF, sensor_calibration in Autoware)</li> </ul> <p>Colliders</p> <ul> <li>Body (screen, description for what purpose it may be used)</li> <li>Wheels (gifs, wheel script, wheel collider script, why are important, parameters)</li> </ul> <p>Others</p> <ul> <li>Center of mass (where it is used)</li> <li>Models (Body, Wheels, Sensor Kit, screens)</li> <li>Reflection Probe (screens, hyperlink to unity)</li> </ul>"},{"location":"UserGuide/FirstSteps/AddCheckpointsOnTheWayToTheGoal/","title":"Add checkpoints on the way to the goal","text":"<p>(video/gif showing how the planned route can be modified using a checkpoint)</p>"},{"location":"UserGuide/FirstSteps/EnableSelf-driving/","title":"Enable self-driving","text":""},{"location":"UserGuide/FirstSteps/EnableSelf-driving/#start-autonomous-driving","title":"Start autonomous-driving","text":"<p>To start autonomous-driving click <code>AUTO</code> button on Autoware State Panel.</p> <p></p>"},{"location":"UserGuide/FirstSteps/EnableSelf-driving/#video","title":"Video","text":"<p>For detailed showcase of whole self-driving process please see the video below (open in full screen mode).</p>"},{"location":"UserGuide/FirstSteps/SetASingleGoal/","title":"Set a single goal","text":""},{"location":"UserGuide/FirstSteps/SetASingleGoal/#how-to-set-a-single-goal-step-by-step","title":"How to set a single goal step by step","text":"<ol> <li> <p>Click <code>2D Goal Pose</code> button</p> <p></p> </li> <li> <p>Click and drag the mouse on the road to set goal position and orientation. Planned path should appear on the road after a while.</p> <p></p> <p>Important</p> <p>Remember to always set orientation aligned with road direction. Road direction is marked as small arrow marks on the road area.</p> </li> </ol>"},{"location":"UserGuide/FirstSteps/SetTheInitializationPosition/","title":"Set the initialization position","text":""},{"location":"UserGuide/FirstSteps/SetTheInitializationPosition/#automatic-position-initialization","title":"Automatic position initialization","text":"<p>When launching Autioware after AWSIM has been launched the ego vehicle position should be automatically initialized in Autoware. When this does not happen please see this section.</p> <p>The full process can be seen in the video below (open in full screen mode to see the details).</p>"},{"location":"UserGuide/FirstSteps/SetTheInitializationPosition/#manual-position-initialization","title":"Manual position initialization","text":"<p>In order to set position of ego vehicle manually</p> <ol> <li> <p>Click <code>2D Pose Estimate</code> button.</p> <p></p> </li> <li> <p>Click and drag on the road area position to set estimated position and orientation.</p> <p></p> <p>Important</p> <p>The position and orientation to set in demo should be the same as in the video in this section.</p> </li> <li> <p>Wait for the ego vehicle to appear.</p> </li> </ol>"},{"location":"UserGuide/Installation/AWSIMDemo/","title":"AWSIM Demo","text":""},{"location":"UserGuide/Installation/AWSIMDemo/#demo-configuration","title":"Demo configuration","text":"<p>The simulation provided in the AWSIM demo is configured as follows:</p> AWSIM Demo Settings Vehicle Lexus RX 450h Environment Japan Tokyo Nishishinjuku Sensors Gnss * 1 IMU * 1 LiDAR * 1 Traffic camera * 1 Traffic Randomized traffic ROS2 humble"},{"location":"UserGuide/Installation/AWSIMDemo/#download-and-run","title":"Download and run","text":"<p>Warning</p> <p>Before following through with this section make sure to check prerequisites.</p> <p>To run the simulator, please follow the steps below.</p> <ol> <li> <p>Download the <code>AWSIM_v1.1.0.zip</code>.</p> <p>Download AWSIM Demo for ubuntu</p> </li> <li> <p>Unzip the downloaded file.</p> </li> <li> <p>Make the <code>AWSIM_demo.x86_64</code> file executable.</p> <p>Rightclick the <code>AWSIM_demo.x86_64</code> file and check the <code>Execute</code> checkbox  </p> <p>or execute the command below.</p> <pre><code>chmod +x &lt;path to AWSIM folder&gt;/AWSIM_demo.x86_64\n</code></pre> </li> <li> <p>Launch <code>AWSIM_demo.x86_64</code>.     <pre><code>./&lt;path to AWSIM folder&gt;/AWSIM_demo.x86_64\n</code></pre></p> <p>Warning</p> <p>It may take some time for the application to start the so please wait until image similar to the one presented below is visible in your application window.</p> <p>Running AWSIM should look something like te one below.</p> <p></p> </li> </ol>"},{"location":"UserGuide/Installation/AWSIMDemo/#run-with-autoware-gifsvideo","title":"Run with Autoware (gifs/video)","text":"<ol> <li> <p>Launch AWSIM like in section before</p> </li> <li> <p>Launch Autoware.</p> <ol> <li> <p>Open new terminal and source the Autoware workspace</p> <pre><code>source &lt;autoware workspace&gt;/install/setub.bash\n</code></pre> </li> <li> <p>Launch the Autoware</p> <p>Warning</p> <p><code>&lt;your mapfile location&gt;</code> must be changed arbitrarily. Specify the path to the outermost map folder. When specifying the path the <code>~</code> operator cannot be used - please specify absolute full path, or use the <code>$HOME</code> environmental variable.</p> <pre><code>source install/setup.bash\nros2 launch autoware_launch e2e_simulator.launch.xml vehicle_model:=sample_vehicle sensor_model:=awsim_sensor_kit map_path:=&lt;your mapfile location&gt;\n</code></pre> </li> </ol> <p>Successfully launched Autoware should look something like the one below.</p> <p></p> </li> </ol>"},{"location":"UserGuide/Installation/Prerequisites/","title":"Prerequisites","text":""},{"location":"UserGuide/Installation/Prerequisites/#pc-specs","title":"PC specs","text":"<p>Please make sure that your machine meets the following requirements in order to run the simulation correctly:</p> Required PC Specs OS Ubuntu 22.04 CPU 6 cores and 12 thread or higher GPU RTX2080Ti or higher Nvidia Driver (Windows) &gt;=472.50 Nvidia Driver (Ubuntu 22) &gt;=515.43.04"},{"location":"UserGuide/Installation/Prerequisites/#linux","title":"Linux","text":""},{"location":"UserGuide/Installation/Prerequisites/#localhost-settings","title":"Localhost settings","text":"<p>The simulation is based on the appropriate network setting, which allows for trouble-free communication of the AWSIM simulation with the Autoware software. To apply required localhost settings please add the following lines to <code>~/.bashrc</code> file.</p> <pre><code>export ROS_LOCALHOST_ONLY=1\nexport RMW_IMPLEMENTATION=rmw_cyclonedds_cpp\n\nif [ ! -e /tmp/cycloneDDS_configured ]; then\nsudo sysctl -w net.core.rmem_max=2147483647\nsudo ip link set lo multicast on\n    touch /tmp/cycloneDDS_configured\nfi\n</code></pre> <p>If you are having trouble with network connection consider replacing <code>export ROS_LOCALHOST_ONLY=1</code> with <code>export ROS_DOMAIN_ID=XX</code> where <code>XX</code> is a unique number in your network between 0 and 101 inclusive. For more information about <code>ROS_DOMAIN_ID</code> head to official documentation.</p> <p>Note</p> <p>Adding these lines to your <code>.bashrc</code> file will require you to supply your password first time you open a terminal after each PC restart.</p>"},{"location":"UserGuide/Installation/Prerequisites/#install-git","title":"Install Git","text":"<p>To download AWSIM from a remote repository you need to install git. To do that paste the commands below into terminal.</p> <pre><code>sudo apt-get -y update\nsudo apt-get -y install git\n</code></pre>"},{"location":"UserGuide/Installation/Prerequisites/#install-nvidia-gpu-driver","title":"Install Nvidia GPU driver","text":"<p>On Ubuntu you can open <code>Additional Drivers</code> application and from there select one driver and install it. </p> <p>Other possibility is to install drivers from command line.</p> <ul> <li>Add Nvidia driver to apt repository. <pre><code>sudo add-apt-repository ppa:graphics-drivers/ppa\nsudo apt update\n</code></pre></li> <li>Install the recommended version of the driver. <pre><code>sudo ubuntu-drivers autoinstall\n</code></pre></li> </ul> <p>Note</p> <p>After installing drivers PC reboot is required.</p> <p>To check whether the drivers are working correctly run <code>nvidia-smi</code> command in terminal and check whether you get a result similar to the one below.</p> <p></p>"},{"location":"UserGuide/Installation/Prerequisites/#install-vulkan-graphics-library","title":"Install Vulkan Graphics Library","text":"<p>To install Vulkan Graphics Library</p> <ul> <li>Update the environment. <pre><code>sudo apt update\n</code></pre></li> <li>Install Vulkan library <pre><code>sudo apt install libvulkan1\n</code></pre></li> </ul>"},{"location":"UserGuide/Installation/Prerequisites/#windows","title":"Windows","text":""},{"location":"UserGuide/Installation/Prerequisites/#localhost-settings_1","title":"Localhost settings","text":""},{"location":"UserGuide/Installation/Prerequisites/#install-git_1","title":"Install Git","text":""},{"location":"UserGuide/Installation/Prerequisites/#install-nvidia-gpu-driver-gif-how-to-test","title":"Install Nvidia GPU driver (gif - how to test)","text":""},{"location":"UserGuide/Installation/Prerequisites/#install-vulkan-graphics-library_1","title":"Install Vulkan Graphics Library","text":""},{"location":"UserGuide/Installation/Prerequisites/#installing-autoware-70-current-launching-autoware","title":"Installing Autoware [70% current Launching Autoware]","text":"<p>In order to configure and run the Autoware software with the AWSIM demo, please:</p> <ol> <li> <p>Download <code>map files (pcd, osm)</code> and unzip them.</p> <p>Download Map files (pcd, osm)</p> </li> <li> <p>Clone Autoware and move to the directory. <pre><code>git clone https://github.com/autowarefoundation/autoware.git\ncd autoware\n</code></pre></p> </li> <li>Switch branch to <code>awsim-stable</code>. NOTE: The latest <code>main</code> branch is for ROS 2 humble. <pre><code>git checkout awsim-stable\n</code></pre></li> <li>Configure the environment. (Skip if Autoware environment has been configured before) <pre><code>./setup-dev-env.sh\n</code></pre></li> <li>Create the <code>src</code> directory and clone external dependent repositories into it. <pre><code>mkdir src\nvcs import src &lt; autoware.repos\n</code></pre></li> <li>Install dependent ROS packages. <pre><code>source /opt/ros/humble/setup.bash\nrosdep update\nrosdep install -y --from-paths src --ignore-src --rosdistro $ROS_DISTRO\n</code></pre></li> <li>Build the workspace. <pre><code>colcon build --symlink-install --cmake-args -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=\"-w\"\n</code></pre></li> </ol>"},{"location":"UserGuide/Installation/Troubleshooting/","title":"Troubleshooting","text":"<p>Trouble shooting</p>"},{"location":"UserGuide/ProjectGuide/","title":"Project guide","text":"<p>(a short description of what the project consists of, what are the components - hyperlinks)</p>"},{"location":"UserGuide/ProjectGuide/DefaultExistingScenes/","title":"Default existing scenes","text":"<ul> <li>AutowareSimulation (description, screen)</li> <li>NPCVehicleSample (description, screen)</li> <li>NPCPedestrianSample (description, screen)</li> <li>TrafficIntersectionSample (description, screen)</li> <li>TrafficLightSample (description, screen)</li> <li>PointCloudMapping (description, screen)</li> <li>SensorConfig (description, screen)</li> <li>Lidar (description, screen)<ul> <li>LidarSkinnedStress</li> <li>LidarSceneDevelop</li> <li>LidarDisablingTest</li> </ul> </li> </ul>"},{"location":"UserGuide/ProjectGuide/DirectoryStructure/","title":"Directory","text":"<p>AWSIM has the following directory structure. Mostly they are grouped by file type.</p> <pre><code>AWSIM       //  root directory.\n \u2502\n \u2502\n \u251c\u2500Assets                           // Unity project Assets directory.\n \u2502  \u2502                               // Place external libraries\n \u2502  \u2502                               // under this directory.\n \u2502  \u2502                               // (e.g. RGLUnityPlugin, ROS2ForUnity, etc..)\n \u2502  \u2502\n \u2502  \u2502\n \u2502  \u251c\u2500AWSIM                         // Includes assets directly related to AWSIM\n \u2502  |                               // (Scripts, Prefabs etc.)\n \u2502  \u2502  \u2502\n \u2502  \u2502  \u2502\n \u2502  \u2502  \u251c\u2500Externals                  // Place for large files or\n \u2502  \u2502  |                            // external project dependencies\n \u2502  \u2502  |                            // (e.g. Ninshinjuku map asset).\n \u2502  \u2502  \u2502                            // The directory is added to `.gitignore`\n \u2502  \u2502  \u2502\n \u2502  \u2502  \u251c\u2500HDRPDefaultResources       // Unity HDRP default assets.\n \u2502  \u2502  \u2502\n \u2502  \u2502  \u251c\u2500Materials                  // Materials used commonly in Project.\n \u2502  \u2502  \u2502\n \u2502  \u2502  \u251c\u2500Models                     // 3D models\n \u2502  \u2502  \u2502  \u2502                         // Textures and materials for 3D models\n \u2502  \u2502  \u2502  \u2502                         // are also included.\n \u2502  \u2502  \u2502  \u2502\n \u2502  \u2502  \u2502  \u2514\u2500&lt;3D Model&gt;              // Directory of each 3D model.\n \u2502  \u2502  \u2502     \u2502\n \u2502  \u2502  \u2502     \u2502\n \u2502  \u2502  \u2502     \u251c\u2500Materials            // Materials used in 3D model.\n \u2502  \u2502  \u2502     \u2502\n \u2502  \u2502  \u2502     \u2502\n \u2502  \u2502  \u2502     \u2514\u2500Textures             // Textures used in 3D model.\n \u2502  \u2502  \u2502\n \u2502  \u2502  \u2502\n \u2502  \u2502  \u251c\u2500Prefabs                    // Prefabs not dependent on a specific scene.\n \u2502  \u2502  \u2502\n \u2502  \u2502  \u251c\u2500Scenes                     // Scenes\n \u2502  \u2502  \u2502  \u2502                         // Includes scene-specific scripts, etc.\n \u2502  \u2502  \u2502  \u2502\n \u2502  \u2502  \u2502  \u2502\n \u2502  \u2502  \u2502  \u251c\u2500Main                    // Scenes used in the simulation.\n \u2502  \u2502  \u2502  \u2502\n \u2502  \u2502  \u2502  \u2502\n \u2502  \u2502  \u2502  \u2514\u2500Samples                 // Sample Scenes showcasing components.\n \u2502  \u2502  \u2502\n \u2502  \u2502  \u2502\n \u2502  \u2502  \u2514\u2500Scripts                    // C# scripts.\n \u2502  \u2502\n \u2502  \u2502\n \u2502  \u251c\u2500RGLUnityPlugin        // Robotec GPU LiDAR external Library.\n \u2502  \u2502                       // see: https://github.com/RobotecAI/RobotecGPULidar\n \u2502  \u2502\n \u2502  \u2502\n \u2502  \u2514\u2500Ros2ForUnity          // ROS2 communication external Library.\n \u2502                          // see: https://github.com/RobotecAI/ros2-for-unity\n \u2502\n \u251c\u2500Packages         // Unity automatically generated directories.\n \u251c\u2500ProjectSettings  //\n \u251c\u2500UserSettings     //\n \u2502\n \u2502\n \u2514\u2500docs             // AWSIM documentation. Generated using mkdocs.\n                    // see: https://www.mkdocs.org/\n</code></pre>"},{"location":"UserGuide/ProjectGuide/ExternalLibraries/","title":"External Libraries","text":"<ul> <li>Ros2Unity (description, reasons for using, hyperlink)<ul> <li>Default message types (short description with location)</li> <li>List of used topics</li> <li>Add custom ROS 2 message type [70% Current] (screens) </li> </ul> </li> </ul>"},{"location":"UserGuide/ProjectGuide/ExternalLibraries/#add-custom-ros-2-message-type","title":"Add custom ROS 2 message type","text":""},{"location":"UserGuide/ProjectGuide/ExternalLibraries/#ros-2-for-unity","title":"ROS 2 For Unity","text":"<p>AWSIM uses Ros2ForUnity module for ROS 2 communication. <code>ROS 2 For Unity</code> is a high-performance communication solution to connect Unity3D and ROS 2 ecosystem in a ROS 2 \"native\" way.</p> <p>This document briefly guides you on how to add your custom messages to the simulation. For a detailed description, please see ROS 2 For Unity Readme.</p>"},{"location":"UserGuide/ProjectGuide/ExternalLibraries/#prerequisites","title":"Prerequisites","text":"<p><code>ROS 2 For Unity</code> depends on a ros2cs - a C## .NET library for ROS 2. You don't have to install it manually, but there are a few prerequisites that must be resolved first.</p> <p>Please refer to the following prerequisites section for your OS:</p> UbuntuWindows <p>Ubuntu prerequisites</p> <p>Windows prerequisites</p> <p>Additional required tools:</p> <ul> <li>Git</li> <li> <p>Shell:</p> UbuntuWindows 10 <p><code>bash</code></p> <p><code>powershell</code></p> </li> </ul>"},{"location":"UserGuide/ProjectGuide/ExternalLibraries/#build-custom-messages","title":"Build custom messages","text":""},{"location":"UserGuide/ProjectGuide/ExternalLibraries/#assumptions","title":"Assumptions","text":"<p>To include a custom ROS 2 message, you have to build <code>ROS 2 For Unity</code> with your custom message package. The following steps will assume that:</p> <ul> <li> <p>the temporary <code>ROS 2 For Unity</code> build folder is located in the home directory</p> UbuntuWindows <p><code>~/</code></p> <p><code>C:\\</code></p> </li> <li> <p>your message package is called <code>custom_msgs</code> and is located under the path:</p> UbuntuWindows <p><code>~/custom_msgs</code></p> <p><code>C:\\custom_msgs</code></p> <ul> <li>ROS 2 version is <code>humble</code> (<code>foxy</code> and <code>galactic</code> are also supported, please check the current AWSIM version for more information about its ROS2 version) and is located in</li> </ul> UbuntuWindows <p><code>/opt/ros/humble</code></p> <p><code>C:\\ros2_humble</code></p> </li> </ul>"},{"location":"UserGuide/ProjectGuide/ExternalLibraries/#workspace-preparation","title":"Workspace preparation","text":"<ol> <li> <p>Clone <code>ROS 2 For Unity</code> repository.</p> <pre><code>git clone https://github.com/RobotecAI/ros2-for-unity\n</code></pre> </li> <li> <p>Pull dependent repositories</p> UbuntuWindows <pre><code>cd ~/ros2-for-unity\n. /opt/ros/humble/setup.bash\n./pull_repositories.sh\n</code></pre> <pre><code>cd C:\\ros2-for-unity\nC:\\ros2_humble\\local_setup.ps1\n.\\pull_repositories.ps1\n</code></pre> </li> </ol>"},{"location":"UserGuide/ProjectGuide/ExternalLibraries/#setup-custom_msgs-package","title":"Setup <code>custom_msgs</code> package","text":""},{"location":"UserGuide/ProjectGuide/ExternalLibraries/#package-hosted-on-git-repository","title":"Package hosted on git repository","text":"<ol> <li>Open <code>ros2-for-unity/ros2_for_unity_custom_messages.repos</code> file in your favorite editor,</li> <li> <p>Modify the file contents, so it points to <code>custom_msgs</code> repository by changing <code>&lt;REPOSITORY_URL&gt;</code> to repository address, <code>&lt;BRANCH_NAME&gt;</code> to desired branch and <code>&lt;PACKAGE_NAME&gt;</code> to your local package name representation - in this case <code>custom_msgs</code>. The configured file should look as follows:</p> <p><pre><code>## NOTE: Use this file if you want to build with custom messages that reside in a separate remote repo.\n## NOTE: use the following format\n\nrepositories:\n    src/ros2cs/custom_messages/&lt;PACKAGE_NAME&gt;:\n        type: git\n        url: &lt;REPOSITORY_URL&gt;\n        version: &lt;BRANCH_NAME&gt;\n</code></pre> 3. Now please, pull repositories to download and setup the package:</p> UbuntuWindows <pre><code>./pull_repositories.sh\n</code></pre> <pre><code>.\\pull_repositories.ps1\n</code></pre> </li> </ol>"},{"location":"UserGuide/ProjectGuide/ExternalLibraries/#package-contained-on-local-machine","title":"Package contained on local machine","text":"<ol> <li> <p>Simply <code>custom_msgs</code> package to <code>src/ros2cs/custom_messages</code> directory</p> UbuntuWindows <pre><code>cp -r ~/custom_msgs ~/ros2-for-unity/src/ros2cs/custom_messages/\n</code></pre> <pre><code>cp -r ~/custom_msgs ~/ros2-for-unity/src/ros2cs/custom_messages/\n</code></pre> </li> </ol>"},{"location":"UserGuide/ProjectGuide/ExternalLibraries/#build-ros-2-for-unity","title":"Build ROS 2 For Unity","text":"<p>Build <code>ROS 2 For Unity</code> using the following command:</p> UbuntuWindows <pre><code>./build.sh --standalone\n</code></pre> <pre><code>.\\build.ps1 -standalone\n</code></pre>"},{"location":"UserGuide/ProjectGuide/ExternalLibraries/#install-custom_msgs-to-awsim","title":"Install <code>custom_msgs</code> to AWSIM","text":"<p>New <code>ROS 2 For Unity</code> build, which you just made, contains multiple libraries that already exist in the AWSIM. To install <code>custom_msgs</code> and not copy all other unnecessary files, you should get the <code>custom_msgs</code> related libraries only and copy them to the analogous directories in <code>AWSIM/Assets/Ros2ForUnity</code>.</p> <p>You can find them in following directories:</p> <ul> <li><code>ros2-for-unity/install/asset/Ros2ForUnity/Plugins</code> which names matches <code>custom_msgs_*</code></li> </ul> UbuntuWindows <pre><code>`ros2-for-unity/install/asset/Ros2ForUnity/Plugins/Linux/x86_64/` which names matches `libcustom_msgs_*`\n</code></pre> <pre><code>`ros2-for-unity/install/asset/Ros2ForUnity/Plugins/Windows/x86_64/` which names matches `custom_msgs_*`\n</code></pre> <p>To automate the process, you can use these commands (change <code>&lt;AWSIM_DIR&gt;</code> to your E2Simulator path and <code>&lt;CUSTOM_MSGS_PACKAGE_NAME&gt;</code> to a custom messages package):</p> UbuntuWindows <pre><code>find ~/ros2-for-unity/install/asset/Ros2ForUnity/Plugins -maxdepth 1 -name \"&lt;CUSTOM_MSGS_PACKAGE_NAME&gt;*\"    -type f -exec cp {} &lt;AWSIM_DIR&gt;/Assets/Ros2ForUnity/Plugins \\;\nfind ~/ros2-for-unity/install/asset/Ros2ForUnity/Plugins/Linux/x86_64 -maxdepth 1 -name     \"lib&lt;CUSTOM_MSGS_PACKAGE_NAME&gt;*\" -type f -exec cp {} &lt;AWSIM_DIR&gt;/Assets/Ros2ForUnity/Plugins/Linux/x86_64 \\;\n</code></pre> <pre><code>Get-ChildItem C:\\ros2-for-unity\\install\\asset\\Ros2ForUnity\\Plugins\\* -Include @('&lt;CUSTOM_MSGS_PACKAGE_NAME&gt;*') | Copy-Item -Destination &lt;AWSIM_DIR&gt;\\Assets\\Ros2ForUnity\\Plugins\nGet-ChildItem C:\\ros2-for-unity\\install\\asset\\Ros2ForUnity\\Plugins\\Windows\\x86_64\\* -Include @('&lt;CUSTOM_MSGS_PACKAGE_NAME&gt;*') | Copy-Item -Destination &lt;AWSIM_DIR&gt;\\Assets\\Ros2ForUnity\\Plugins\\Windows\\x86_64\n</code></pre> <ul> <li>Accessing and filling in message fields (short example - including array)</li> </ul> <ul> <li>RobotecGPULidar (description, reasons for using, hyperlink)<ul> <li>SceneManager Script (description)</li> </ul> </li> </ul>"},{"location":"UserGuide/ProjectGuide/ExternalLibraries/#ros-2-topic-list","title":"ROS 2 topic list","text":"<p>The tables of topics AWSIM publishes and subscribes from can be found below. The list can be extended by the user for the specific use case. To see how to custom messages type for ROS 2, please refer to Add custom ROS 2 message type document.</p>"},{"location":"UserGuide/ProjectGuide/ExternalLibraries/#publisher-list","title":"Publisher list","text":"category topic msg frame_id hz QoS clock <code>/clock</code> <code>rosgraph_msgs/Clock</code> none <code>100</code> <code>Best effort</code>, <code>Volatile</code>, <code>Keep last/1</code> camera <code>/sensing/camera/traffic_light/camera_info</code> <code>sensor_msgs/CameraInfo</code> <code>traffic_light_left_camera/camera_link</code> <code>10</code> <code>Best effort</code>, <code>Volatile</code>, <code>Keep last/1</code> camera <code>/sensing/camera/traffic_light/image_raw</code> <code>sensor_msgs/Image</code> <code>traffic_light_left_camera/camera_link</code> <code>10</code> <code>Best effort</code>, <code>Volatile</code>, <code>Keep last/1</code> gnss <code>/sensing/gnss/pose</code> <code>geometry_msgs/Pose</code> <code>gnss_link</code> <code>1</code> <code>Reliable</code>, <code>Volatile</code>, <code>Keep last/1</code> gnss <code>/sensing/gnss/pose_with_covariance</code> <code>geometry_msgs/PoseWithCovarianceStamped</code> <code>gnss_link</code> <code>1</code> <code>Reliable</code>, <code>Volatile</code>, <code>Keep last/1</code> imu <code>/sensing/imu/tamagawa/imu_raw</code> <code>sensor_msgs/Imu</code> <code>tamagawa/imu_link</code> <code>30</code> <code>Reliable</code>, <code>Volatile</code>, <code>Keep last/1000</code> lidar <code>/sensing/lidar/top/pointcloud_raw</code> <code>sensor_msgs/PointCloud2</code> <code>sensor_kit_base_link</code> <code>10</code> <code>Best effort</code>, <code>Volatile</code>, <code>Keep last/5</code> lidar <code>/sensing/lidar/top/pointcloud_raw_ex</code> <code>sensor_msgs/PointCloud2</code> <code>sensor_kit_base_link</code> <code>10</code> <code>Best effort</code>, <code>Volatile</code>, <code>Keep last/5</code> vehicle status <code>/vehicle/status/control_mode</code> <code>autoware_auto_vehicle_msgs/ControlModeReport</code> none <code>30</code> <code>Reliable</code>, <code>Volatile</code>, <code>Keep last/1</code> vehicle status <code>/vehicle/status/gear_status</code> <code>autoware_auto_vehicle_msgs/GearReport</code> none <code>30</code> <code>Reliable</code>, <code>Volatile</code>, <code>Keep last/1</code> vehicle status <code>/vehicle/status/steering_status</code> <code>autoware_auto_vehicle_msgs/SteeringReport</code> none <code>30</code> <code>Reliable</code>, <code>Volatile</code>, <code>Keep last/1</code> vehicle status <code>/vehicle/status/turn_indicators_status</code> <code>autoware_auto_vehicle_msgs/TurnIndicatorsReport</code> none <code>30</code> <code>Reliable</code>, <code>Volatile</code>, <code>Keep last/1</code> vehicle status <code>/vehicle/status/hazard_lights_status</code> <code>autoware_auto_vehicle_msgs/HazardLightsReport</code> none <code>30</code> <code>Reliable</code>, <code>Volatile</code>, <code>Keep last/1</code> vehicle status <code>/vehicle/status/velocity_status</code> <code>autoware_auto_vehicle_msgs/VehicleReport</code> none <code>30</code> <code>Reliable</code>, <code>Volatile</code>, <code>Keep last/1</code>"},{"location":"UserGuide/ProjectGuide/ExternalLibraries/#subscriber-list","title":"Subscriber list","text":"category topic msg frame_id hz QoS control <code>/control/command/turn_indicators_cmd</code> <code>autoware_auto_vehicle_msgs/TurnIndicatorsCommand</code> none <code>10</code> <code>Reliable</code>, <code>TransientLocal</code>, <code>KeepLast/1</code> control <code>/control/command/hazard_lights_cmd</code> <code>autoware_auto_vehicle_msgs/HazardLightsCommand</code> none <code>10</code> <code>Reliable</code>, <code>TransientLocal</code>, <code>KeepLast/1</code> control <code>/control/command/control_cmd</code> <code>autoware_auto_control_msgs/AckermannControlCommand</code> none <code>60</code> <code>Reliable</code>, <code>TransientLocal</code>, <code>KeepLast/1</code> control <code>/control/command/gear_cmd</code> <code>autoware_auto_vehicle_msgs/GearCommand</code> none <code>10</code> <code>Reliable</code>, <code>TransientLocal</code>, <code>KeepLast/1</code> control <code>/control/command/emergency_cmd</code> <code>tier4_vehicle_msgs/msg/VehicleEmergencyStamped</code> none <code>60</code> <code>Reliable</code>, <code>TransientLocal</code>, <code>KeepLast/1</code>"}]}